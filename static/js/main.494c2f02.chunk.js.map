{"version":3,"sources":["components/gamelist/TitleCard/TitleCard.jsx","components/gamelist/CardImage/CardImage.jsx","Context.js","components/gamelist/Card/Card.jsx","components/gamelist/List/List.jsx","components/gamelist/AddNewCard/AddNewCard.jsx","components/gamelist/TitleCard/TitleCardInput.jsx","Api/config.js","Api/games.js","components/gamelist/GameSearchModal/GameSearchModal.jsx","components/Layout/FloatingMenu/FloatingMenu.jsx","components/Checkboxes/Checkboxs1/Checkboxs1.jsx","components/Navs/Menu/Menu.jsx","Hooks/useWindowSize.js","components/Navs/MainNav/MainNav.jsx","Api/Board.js","Api/user.js","components/gamelist/Layout.jsx","components/Buttons/BlueButton/BlueButton.jsx","components/Navs/LogoButtonsNav/LogoButtonsNav.jsx","components/LandingPage/LandingPage.jsx","components/Navs/LogoNav/LogoNav.jsx","components/LoginPage/LoginPage.jsx","components/RegisterPage/RegisterPage.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["TitleCard","props","className","title","onClick","onAddNewCardClick","size","CardImage","url","useState","displayImage","setDisplayImage","image","includes","src","test","onError","alt","OptionsContext","React","createContext","optionsContextDefaultValues","images","release_date_released","release_date_unreleased","Card","useContext","optionsContext","draggableId","cardId","index","key","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","cardImage","cardText","cardReleaseDate","date","formDate","Date","today","differenceInDays","getTime","Intl","DateTimeFormat","year","month","day","formatToParts","value","Math","floor","processLaunchDate","List","listId","droppableId","type","droppableProps","listCards","map","item","cardTitle","placeholder","AddNewCard","divStyle","height","toString","lineHeight","style","forwardRef","onChange","onChangeValue","onFocus","focused","onBlur","blured","onKeyPress","api_url","gameResultsCache","games_search","cancel","jwt","query","page","a","axios","CancelToken","source","method","headers","Authorization","data","cancelToken","token","response","responseData","result","isCancel","console","log","message","make_games_search","SearchResultsComponent","searchResults","gameItemClicked","backgroundImage","timestamp","getFullYear","showMoreClicked","visibility","showMoreStatus","display","emptyResponseMessage","searchingStatus","GameSearchModal","useLocalStorage","searchInputElement","useRef","searchQuery","setSearchQuery","setSearchResults","setShowMoreStatus","setSearchingStatus","setEmptyResponseMessage","setPage","updateSearchData","length","current","concat","useEffect","delayDebounceFn","setTimeout","clearTimeout","status","focus","resetModal","event","modalOutsideClicked","stopPropagation","color","target","FloatingMenu","x","y","width","open","ClickAwayListener","onClickAway","closeMenu","children","Checkboxs1","classes","makeStyles","root","backgroundColor","outline","icon","borderRadius","boxShadow","background","checkedIcon","content","useStyles","Checkbox","disableRipple","clsx","inputProps","BoardSettings","options","setOptions","changeMenu","checked","UserSettings","DefaultMenu","Menu","activeMenu","setActiveMenu","useWindowSize","undefined","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","MainNav","menuToggle","setMenuToggle","notificationsMenuToggle","setNotificationsMenuToggle","usernameMenuToggle","setUsernameMenuToggle","usernameRect","setUsernameRect","notificationsRect","setNotificationsRect","usernameButtonRef","notificationsRef","getBoundingClientRect","username","logo","api_board_createlist","listTitle","api_board_updateListOrder","listOrder","api_board_updateCardOrder","cardOrder","api_board_moveCard","list1Id","list2Id","cardOrder1","cardOrder2","api_board_addCard","gameId","api_login","email","password","api_register","api_set_options","Layout","dummyData","setOptonsContext","fetchingDataState","setFetchingDataState","listorder","setListorder","cards","setCards","lists","setLists","activeModalListId","setActiveModalListId","addButtonVisibile","setAddButtonVisibile","titleTextBoxVisible","settitleTextBoxVisible","modalStatus","setModalStatus","titleEntry","setTitleEntry","titleInputElement","setUsername","fetchDataFromApi","name","_listOrder","board","listsOrder","_lists","_cards","forEach","element","cardsIds","games","optionsCopy","addGameCard","game","uuidv4","gameTitle","id","newCards","updatedCard","addnewButtonClicked","scrollTo","titleInputOnChangeValueHandler","val","enterKeyAllow","setEnterKeyAllow","addnewFocused","addnewBlured","newId","new_order","push","addnewKeyPressed","Provider","onDragEnd","destination","newListOrder","splice","startListId","finishListId","startList","finishList","curentListIndex","list","newCardsList","Array","from","newList","startListCards","newStart","finishListCards","newFinish","direction","curentList","i","TitleCardInput","BlueButton","disabled","spinner","text","LogoButtonsNav","LandingPage","LoginPage","history","useHistory","setEmail","setPassword","rememberCheck","setRememberCheck","buttonDisabled","setButtonDisabled","showIncorrectFalir","setShowIncorrectFlair","inputFieldChanged","setState","loginClicked","writeStorage","handleKeyPress","css","to","textDecoration","RegisterPage","incorrectFlairText","setIncorrectFlairText","showSuccessFalir","setShowSuccessFalir","registerClicked","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.494c2f02.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./TitleCard.scss\"\nimport {RiMenuAddLine} from \"react-icons/ri\"\n// Component that renders the title card of a list\nconst TitleCard = (props) => {\n    return (\n      <div className=\"titleCard-card\">\n        <div className=\"titleCard-title-text\">\n          {props.title}\n        </div>\n        <span className=\"plus-icon\" onClick={props.onAddNewCardClick}>\n          <RiMenuAddLine size=\"40\"/>\n          </span>\n      </div>\n    )\n  }\n\nexport default TitleCard","import React from \"react\";\nimport { useState} from \"react\";\nimport \"./CardImage.scss\";\n// Component that renders a image\n// Is used by a card\nconst CardImage = (props) => {\n\n  const [displayImage, setDisplayImage] = useState(true);\n  const withHttp = (url) =>\n    !/^https?:\\/\\//i.test(url) ? `https://${url}` : url;\n\n  // If the image dose not exist we do not display it\n  const imageDoseNotExist = () => {\n    setDisplayImage(false);\n  };\n  \n  if(displayImage && !(props.image.includes(\"undefined\"))){\n    return (\n        <div className=\"card-image\">\n          <img\n            src={withHttp(props.image)} \n            onError={imageDoseNotExist}\n            alt=\"\"\n          ></img>\n        </div>\n    );\n  } else {\n    return(<div></div>)\n  }\n}\n\n\nexport default CardImage;\n","import React from \"react\";\nimport {useState} from \"react\";\n\nexport const OptionsContext = React.createContext();\n// Default options values\nexport const optionsContextDefaultValues = {\n    images: true,\n    release_date_released: false,\n    release_date_unreleased: true,\n  }\n","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport \"./Card.scss\";\nimport CardImage from \"../CardImage/CardImage\";\nimport { OptionsContext } from \"Context.js\";\nimport { useContext } from \"react\";\nimport { useEffect, useState } from \"react\";\n\n// Component that renders a card with a game and a image and a release date\nconst Card = (props) => {\n  const [optionsContext, setOptionsContext] = useContext(OptionsContext);\n  const [launchDate, setLaunchDate] = useState();\n\n  // if (typeof context === \"undefined\") {\n  //   return(\"\")\n  // }\n  // Function to process the release date\n  // For pretty display\n  // This functon will return jsx containing the release date\n  // Or the number of remaning days if there are <10\n  const processLaunchDate = (date) => {\n    if (typeof date === \"undefined\") {\n      return \"\";\n    }\n    const formDate = new Date(date * 1000);\n    var today = new Date();\n    const differenceInTime = formDate.getTime() - today.getTime();\n    const differenceInDays = differenceInTime / (1000 * 3600 * 24);\n\n    if (differenceInDays < 0 && !optionsContext.release_date_released) return \"\";\n\n    const dateTimeFormat = new Intl.DateTimeFormat(\"en\", {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"2-digit\",\n    });\n    const [\n      { value: month },\n      ,\n      { value: day },\n      ,\n      { value: year },\n    ] = dateTimeFormat.formatToParts(formDate);\n\n    if (differenceInDays < 10 && differenceInDays > 0 && optionsContext.release_date_unreleased) {\n      return (\n        <div className=\"card-release-date\">\n          Launch in:{\" \"}\n          <span className=\"date\">{Math.floor(differenceInDays)} Days</span>\n        </div>\n      );\n    }\n\n    if (differenceInDays === 0 && optionsContext.release_date_unreleased) {\n      return (\n        <div className=\"card-release-date\">\n          <span className=\"date\">Launch today</span>\n        </div>\n      );\n    }\n\n    if (optionsContext.release_date_released || (optionsContext.release_date_unreleased && differenceInDays > 0))\n    return (\n      <div className=\"card-release-date\">\n        Launch date:{\" \"}\n        <span className=\"date\">{day + \"-\" + month + \"-\" + year}</span>\n      </div>\n    );\n  };\n\n  return (\n    <Draggable\n      draggableId={props.cardId}\n      index={props.index}\n      key={props.cardId}\n    >\n      {(provided, snapshot) => (\n        <div\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          // TODO: Style when dragging\n          //isDragging={snapshot.isDragging}\n        >\n          <div className=\"card-card\">\n            <div className=\"card-content\">\n              {props.cardImage && optionsContext.images ? (\n                <CardImage image={props.cardImage} />\n              ) : null}\n              <div className=\"card-text\">{props.cardText}</div>\n              {typeof props.cardReleaseDate !== \"undefined\" ? processLaunchDate(props.cardReleaseDate) : \"\"}\n            </div>\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport TitleCard from \"../TitleCard/TitleCard\";\nimport Card from \"../Card/Card\";\nimport \"./List.scss\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\n// Component for the list\n// This components loops trough the list cards and\n// uses Card component to render game cards\nconst List = (props) => {\n\n  return (\n    <Draggable\n      draggableId={props.listId}\n      index={props.index}\n      key={props.listId}\n    >\n      {(provided) => (\n        <div\n          className=\"list-list-wrapper\"\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n        >\n          <div className=\"list-title-card\" {...provided.dragHandleProps}>\n            <TitleCard title={props.title} onAddNewCardClick={props.onAddNewCardClick}/>\n          </div>\n          <div className=\"list-list list-overflow\">\n            <Droppable droppableId={props.listId} type=\"card\">\n              {(provided) => (\n                <div ref={provided.innerRef} {...provided.droppableProps}>\n                  {props.listCards.map((item, index) => (\n                    <div className=\"list-card\">\n                      <Card\n                        cardReleaseDate={item.cardReleaseDate}\n                        cardText={item.cardTitle}\n                        cardImage={item.cardImage}\n                        cardId={item.cardId}\n                        index={index}\n                      />\n                    </div>\n                  ))}\n                  <div className=\"list-padding-emptyadd\"></div>\n                  {provided.placeholder}\n                  <div className=\"list-bottom-padding\"></div> \n                </div>\n              )}\n            </Droppable>\n                  \n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default List;\n","import React from \"react\"\n\nimport \"./AddNewCard.scss\"\n\n// The button that sits in the right of the title\n// The button purpose is to fire the modal on click\nconst AddNewCard = (props) => {\n\n  const divStyle = {\n    height: props.height.toString() + 'px',\n    lineHeight: props.height.toString() + 'px'\n  };\n\n    return (\n      <div className=\"addnewcard-card\" style={divStyle} onClick={props.onClick}>\n        <div className=\"addnewcard-text\">\n          {props.cardText}\n        </div>\n      </div>\n    )\n  }\n\nexport default AddNewCard","import React from \"react\"\n\nimport \"./TitleCard.scss\"\n\n// Component that contains the title card with an input element in it\n// Is used when a user adds a new list\nconst TitleCard = React.forwardRef((props, ref) => {\n    return (\n      <div className=\"titleCard-card\">\n        <div className=\"titleCard-title-text\">\n        <input type=\"text\" \n          placeholder=\"Enter the title of the list\" \n          className=\"titleCard-card-input\"\n          onChange={props.onChangeValue}\n          ref = {ref}\n          onFocus= {props.focused}\n          onBlur= {props.blured}\n          onKeyPress= {props.onKeyPress}\n          value= {props.value}\n          />\n        </div>\n      </div>\n    )\n  })\n\nexport default TitleCard","//const api_url = \"http://localhost:8000\"\nconst api_url = \"http://192.168.0.117:8000\"\nexport { api_url }","import axios from \"axios\";\nimport { api_url } from \"./config\";\n\nlet  gameResultsCache = {}\n\n// Searching for a game\n// This function also handles caching of the responses\n// And it canceles the old requests when reciving newer ones\nconst make_games_search = () => {\n  let cancel;\n  return async (jwt, query, page) => {\n    if (cancel) {\n      cancel.cancel();\n    }\n    cancel = axios.CancelToken.source();\n    try {\n      if (gameResultsCache[query]){\n        if (gameResultsCache[query][page])\n          return gameResultsCache[query][page]\n      }\n      const response = await axios(\n        {\n          method: \"post\",\n          url: api_url + \"/games/search\",\n          headers: { Authorization: jwt },\n          data: {\n            query: query,\n            page: page,\n          },\n        },\n        { cancelToken: cancel.token }\n      );\n      let responseData = response.data\n      if (responseData[\"status\"] === \"null\"){\n        responseData=null\n      }\n      if (!gameResultsCache[query])\n        gameResultsCache[query] = {[page]:responseData};\n      else\n        gameResultsCache[query][page] = responseData\n      const result = responseData;\n      return result;\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        // Handle if request was cancelled\n        console.log(\"Request canceled\", error.message);\n      } else {\n        // Handle usual errors\n        console.log(\"Something went wrong: \", error.message);\n      }\n    }\n  };\n};\n\nexport const games_search = make_games_search();\n","import React from \"react\";\nimport \"./GameSearchModal.scss\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { games_search } from \"../../../Api/games\";\nimport { useLocalStorage } from \"@rehooks/local-storage\";\n\nconst transformDateIntoYear = (timestamp) => {\n  const date = new Date(timestamp * 1000);\n  return date.getFullYear();\n};\nconst SearchResultsComponent = (props) => {\n  if (props.searchResults) {\n    console.log(props.searchResults);\n    return (\n      <div className=\"search-results-container\">\n        {props.searchResults.map((item) => {\n          if (item !== null)\n            return (\n              <div\n                className=\"search-result-element\"\n                onClick={() => props.gameItemClicked(item)}\n              >\n                <div\n                  className=\"image\"\n                  style={{\n                    backgroundImage: \"url(https://\" + item[\"image\"] + \")\",\n                  }}\n                ></div>\n                <div className=\"search-result-text\">\n                  {item[\"name\"]}\n                  {typeof item[\"first_release_date\"] !== \"undefined\" &&\n                    \" (\" +\n                      transformDateIntoYear(item[\"first_release_date\"]) +\n                      \")\"}\n                </div>\n              </div>\n            );\n        })}\n        <div\n          className=\"see-more-btn\"\n          onClick={props.showMoreClicked}\n          style={{\n            visibility: props.showMoreStatus ? \"visible\" : \"hidden\",\n            display: props.emptyResponseMessage ? \"none\" : \"block\",\n          }}\n        >\n          Show More\n        </div>\n        <div\n          className=\"empty-response-message\"\n          style={{\n            display: props.emptyResponseMessage ? \"block\" : \"none\",\n          }}\n        >\n          Nothing more to show\n        </div>\n      </div>\n    );\n  } else if (props.searchingStatus === true) {\n    return (\n      <div className=\"search-results-container\">\n        <div className=\"searching-status-label\">Searching</div>\n      </div>\n    );\n  } else if (props.emptyResponseMessage === true) {\n    return (\n      <div className=\"search-results-container\">\n      <div\n        className=\"empty-response-message\"\n        style={{\n          display: props.emptyResponseMessage ? \"block\" : \"none\",\n        }}\n      >\n        Nothing to show\n      </div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n};\nconst GameSearchModal = (props) => {\n  const [jwt] = useLocalStorage(\"jwt\");\n  const searchInputElement = useRef(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState(null);\n  // Stores if the showMore button should be displayed\n  const [showMoreStatus, setShowMoreStatus] = useState(false);\n  // Records the searching status, if is fetching or not\n  const [searchingStatus, setSearchingStatus] = useState(false);\n  // Records if no data is fetched to display a none found message\n  const [emptyResponseMessage, setEmptyResponseMessage] = useState(false);\n  // The next search page that is to be fetched and displayed\n  const [page, setPage] = useState(1);\n\n  // Method that handles the API request on the search\n  const updateSearchData = async (query, page) => {\n    console.log({ query: query, page: page });\n    if (query.length > 2 && page === 1) {\n      const response = await games_search(jwt, query, page);\n      console.log(searchInputElement.current.value.length)\n      if (searchInputElement.current.value.length <= 2)\n        setSearchResults(null)\n      else\n        setSearchResults(response);\n      setShowMoreStatus(true);\n      setSearchingStatus(false);\n      if (response === null) \n        setEmptyResponseMessage(true);\n\n    } else if (query.length > 2 && page > 1) {\n      const response = await games_search(jwt, query, page);\n      setSearchResults(searchResults.concat(response));\n      if (response === null) {\n        setShowMoreStatus(false);\n        setEmptyResponseMessage(true);\n      } else if (response.length !== 0) {\n        setShowMoreStatus(true);\n      }\n    }\n  };\n\n  // Calls the api after the user has stoped typing for\n  // 0.3 seconds so that the backend is not flooded with \n  // useless requests\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(() => {\n      console.log(searchQuery);\n      setPage(1);\n      updateSearchData(searchQuery, page);\n    }, 300);\n\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchQuery]);\n\n  // When the text field is changed the modal output is reseted\n  const searchInputChanged = (event) => {\n    if (event.target.value.length <= 2)\n      setSearchingStatus(false);\n    else\n      setSearchingStatus(true);\n    setEmptyResponseMessage(false);\n    setSearchResults(null);\n    setPage(1);\n    setSearchQuery(event.target.value);\n  };\n\n  // Focuses the text field when the status is set on true\n  useEffect(() => {\n    if (props.status) {\n      searchInputElement.current.focus();\n    }\n  }, [props.status]);\n\n  // Handles show more button clicked\n  // And is querying the backend for a new page\n  const showMoreClicked = () => {\n    updateSearchData(searchQuery, page + 1);\n    setShowMoreStatus(false);\n    setPage(page + 1);\n  };\n\n  // Deletes the curent search string\n  // And reserts the modal to the starting state\n  // So that if the modal is openend again\n  // It will delete all the previous search information\n  const resetModal = () => {\n    setSearchQuery(\"\");\n    setSearchResults(null);\n    setShowMoreStatus(false);\n    setSearchingStatus(false);\n    setEmptyResponseMessage(false);\n  }\n\n  return (\n    <div\n      className=\"modal-wrapper\"\n      onClick={(event) => {\n        props.modalOutsideClicked(event);\n        resetModal()\n      }}\n      style={{ display: props.status ? \"block\" : \"none\" }}\n    >\n      <div\n        className=\"game-search-modal\"\n        onClick={(event) => event.stopPropagation()}\n      >\n        <span className=\"icon\">\n          {\" \"}\n          <FaSearch size=\"40\" style={{ color: \"rgb(238,247,255)\" }} />{\" \"}\n        </span>\n\n        <span className=\"search-box\">\n          <input\n            type=\"text\"\n            placeholder=\"Search for a game\"\n            ref={searchInputElement}\n            value={searchQuery}\n            onChange={searchInputChanged}\n          ></input>\n        </span>\n\n        <SearchResultsComponent\n          searchResults={searchResults}\n          showMoreClicked={showMoreClicked}\n          showMoreStatus={showMoreStatus}\n          searchingStatus={searchingStatus}\n          gameItemClicked={(event) => {\n            props.gameItemClicked(event);\n            resetModal()\n          }}\n          emptyResponseMessage={emptyResponseMessage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default GameSearchModal;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./FloatingMenu.scss\";\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\nconst FloatingMenu = (props) =>{\n    const style = {\n        'left': props.x+'px',\n        'top': props.y+'px',\n        'width': props.width+'px'\n    }\n    if (props.open){\n        return (\n            <ClickAwayListener onClickAway={props.closeMenu}>\n                <div className=\"floating-menu\" style={style} >\n                    {props.children}\n                </div>\n            </ClickAwayListener>\n        )\n    } else{\n        return (\n            <div></div>\n        )\n    }\n\n}\n\nexport default FloatingMenu","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\n\n\nconst Checkboxs1 = (props) => {\n\n  let size = props.size;\n  if (typeof size === \"undefined\"){\n    size = 30;\n  }\n  const useStyles = makeStyles({\n    root: {\n      \"&:hover\": {\n        backgroundColor: \"transparent\",\n      },\n      \"&:focus\": {\n        outline: \"none\",\n      },\n    },\n    icon: {\n      borderRadius: 0,\n      width: size,\n      height: size,\n      boxShadow:\n        \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n      backgroundColor: \"#f5f8fa\",\n      backgroundImage:\n        \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n  \n      \"input:hover ~ &\": {\n        backgroundColor: \"#ebf1f5\",\n      },\n      \"input:disabled ~ &\": {\n        boxShadow: \"none\",\n        background: \"rgba(206,217,224,.5)\",\n      },\n    },\n    checkedIcon: {\n      backgroundColor: \"rgba(88, 94, 234, 0.8)\",\n      backgroundImage:\n        \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n      \"&:before\": {\n        display: \"block\",\n        width: size,\n        height: size,\n        backgroundImage:\n          \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n          \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n          \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n        content: '\"\"',\n      },\n      \"input:hover ~ &\": {\n        backgroundColor: \"rgba(88, 94, 234, 1)\",\n      },\n    },\n  });\n\n  const classes = useStyles();\n\n  return (\n    <Checkbox\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n      icon={<span className={classes.icon} />}\n      inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n      {...props}\n    />\n  );\n};\n\nexport default Checkboxs1;\n","import React from \"react\";\nimport Checkboxs1 from \"../../Checkboxes/Checkboxs1/Checkboxs1\";\nimport \"./Menu.scss\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { OptionsContext } from \"Context.js\";\n\nconst BoardSettings = (props) => {\n  const [options, setOptions] = useContext(OptionsContext);\n  return (\n    <div className=\"settings-menu\">\n      <div className=\"menu-title\">\n        <span>\n          <ChevronLeftIcon\n            className=\"icon\"\n            onClick={() => props.changeMenu(0)}\n          />\n        </span>\n        <span className=\"menu-title-text\">Board settings</span>\n        <span onClick={props.closeMenu}>\n          <CloseIcon className=\"close-icon\" />\n        </span>\n      </div>\n      <div className=\"menu-subsection\">Cards:</div>\n      <div\n        className=\"menu-item\"\n        onClick={() => setOptions({ ...options, images: !options.images })}\n      >\n        <span>\n          <Checkboxs1 size={18} checked={options.images} />\n        </span>\n        <span>Show images</span>\n      </div>\n\n      <div\n        className=\"menu-item\"\n        onClick={() =>\n          setOptions({\n            ...options,\n            release_date_released: !options.release_date_released,\n          })\n        }\n      >\n        <span>\n          <Checkboxs1 size={18} checked={options.release_date_released} />\n        </span>\n        <span>Show release date for released games </span>\n      </div>\n      <div\n        className=\"menu-item\"\n        onClick={() =>\n          setOptions({\n            ...options,\n            release_date_unreleased: !options.release_date_unreleased,\n          })\n        }\n      >\n        <Checkboxs1 size={18} checked={options.release_date_unreleased} />\n        <span>Show release date for unreleased games</span>\n      </div>\n    </div>\n  );\n};\n\nconst UserSettings = (props) => {\n  return (\n    <div>\n      <div className=\"menu-title\">\n        <span>\n          <ChevronLeftIcon\n            className=\"icon\"\n            onClick={() => props.changeMenu(0)}\n          />\n        </span>\n        <span className=\"menu-title-text\">User settings</span>\n        <span>\n          <CloseIcon className=\"close-icon\" />\n        </span>\n      </div>\n      <div className=\"menu-item\">Logout</div>\n    </div>\n  );\n};\n\nconst DefaultMenu = (props) => {\n  return (\n    <div>\n      <div className=\"menu-title\">\n        <span>Menu</span>\n        <span onClick={props.closeMenu}>\n          <CloseIcon className=\"close-icon\" />\n        </span>\n      </div>\n      <div\n        className=\"menu-item user-settings-item\"\n        onClick={() => props.changeMenu(1)}\n      >\n        <span>User settings</span>\n        <span >\n          <ChevronRightIcon className=\"icon\" />\n        </span>\n      </div>\n      <div className=\"menu-item\" onClick={() => props.changeMenu(2)}>\n        <span>Board settings</span>\n        <span>\n          <ChevronRightIcon className=\"icon\" />\n        </span>\n      </div>\n    </div>\n  );\n};\nconst Menu = (props) => {\n  const [activeMenu, setActiveMenu] = useState(0);\n\n  if (activeMenu === 0) {\n    return (\n      <div className=\"menu\">\n        <DefaultMenu {...props} changeMenu={setActiveMenu} />\n      </div>\n    );\n  }\n  if (activeMenu === 1) {\n    return (\n      <div className=\"menu\">\n        <UserSettings {...props} changeMenu={setActiveMenu} />\n      </div>\n    );\n  }\n  if (activeMenu === 2) {\n    return (\n      <div className=\"menu\">\n        <BoardSettings {...props} changeMenu={setActiveMenu} />\n      </div>\n    );\n  }\n  return <div className=\"menu\"></div>;\n};\n\nexport default Menu;\n","import { useState, useEffect } from \"react\";\n\nconst useWindowSize = () => {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n      width: undefined,\n      height: undefined,\n    });\n  \n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n      \n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n      \n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n      \n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n  \n    return windowSize;\n  }\n\nexport default useWindowSize;","import React from \"react\";\nimport FloatingMenu from \"../../Layout/FloatingMenu/FloatingMenu\";\nimport \"./MainNav.scss\";\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Menu from \"components/Navs/Menu/Menu\";\nimport { useState, useRef, useEffect } from \"react\";\nimport MenuOpenIcon from \"@material-ui/icons/MenuOpen\";\nimport useWindowSize from \"Hooks/useWindowSize\";\nimport logo from \"logo.svg\";\n\nconst MainNav = (props) => {\n  const size = useWindowSize();\n  const [menuToggle, setMenuToggle] = useState(false);\n  const [notificationsMenuToggle, setNotificationsMenuToggle] = useState(false);\n  const [usernameMenuToggle, setUsernameMenuToggle] = useState(false);\n  const [usernameRect, setUsernameRect] = useState(false);\n  const [notificationsRect, setNotificationsRect] = useState(false);\n  const usernameButtonRef = useRef(null);\n  const notificationsRef = useRef(null);\n\n  useEffect(() => {\n    setUsernameRect(usernameButtonRef.current.getBoundingClientRect());\n    setNotificationsRect(notificationsRef.current.getBoundingClientRect());\n  }, [size, props.username]);\n\n  return (\n    <div>\n      <nav className=\"main-nav\">\n        <img src={logo} className=\"logo\"/>\n        <span className=\"buttons-container\">\n          <span\n            className=\"username-button\"\n            ref={usernameButtonRef}\n            onClick={() => setUsernameMenuToggle(!usernameMenuToggle)}\n          >\n            {props.username}\n            {!usernameMenuToggle ? (\n              <ExpandMoreIcon className=\"icon\" />\n            ) : (\n              <ExpandLessIcon className=\"icon\" />\n            )}\n          </span>\n          <span\n            ref={notificationsRef}\n            onClick={() => setNotificationsMenuToggle(!notificationsMenuToggle)}\n          >\n            <NotificationsNoneIcon className=\"icon\" />\n          </span>\n\n          <span onClick={() => setMenuToggle(!menuToggle)}>\n            {!menuToggle ? (\n              <MenuIcon className=\"icon\" />\n            ) : (\n              <MenuOpenIcon className=\"icon\" />\n            )}\n          </span>\n        </span>\n        <FloatingMenu\n          open={usernameMenuToggle}\n          closeMenu={() => setUsernameMenuToggle(!usernameMenuToggle)}\n          x={usernameRect ? usernameRect.x - 15 : 0}\n          y={usernameRect ? usernameRect.y + 25 : 0}\n          width={100}\n        >\n          <div>Logout</div>\n        </FloatingMenu>\n\n        <FloatingMenu\n          open={notificationsMenuToggle}\n          closeMenu={() => setNotificationsMenuToggle(!notificationsMenuToggle)}\n          x={notificationsRect ? notificationsRect.x - 20 : 0}\n          y={notificationsRect ? notificationsRect.y + 25 : 0}\n        />\n      </nav>\n      <div className={!menuToggle ? \"display-none\" : \"\"}>\n        <Menu closeMenu={() => setMenuToggle(!menuToggle)} />\n      </div>\n    </div>\n  );\n};\n\nexport default MainNav;\n","import { api_url } from \"./config\";\nimport axios from \"axios\";\n\n// Creates a list given the id and the title\nconst api_board_createlist = async (jwt, listId, listTitle) => {\n  const response = await axios({\n    method: \"post\",\n    url: api_url + \"/board/createlist\",\n    headers: { Authorization: jwt },\n    data: {\n      listTitle: listTitle,\n      listId: listId,\n    },\n  });\n  return response.data;\n};\n\n// Updates the lists order array\nconst api_board_updateListOrder = async (jwt, listOrder) => {\n  const response = await axios({\n    method: \"post\",\n    url: api_url + \"/board/updatelistorder\",\n    headers: { Authorization: jwt },\n    data: {\n      listOrder: listOrder,\n    },\n  });\n  return response.data;\n};\n\n// Updates the card order array of a list\n// can be used when moving a card inside a list\nconst api_board_updateCardOrder = async (jwt, listId, cardOrder) => {\n  const response = await axios({\n    method: \"post\",\n    url: api_url + \"/board/updatecardorder\",\n    headers: { Authorization: jwt },\n    data: {\n      listId: listId,\n      cardOrder: cardOrder\n    },\n  });\n  return response.data;\n}\n\n// Move a card between two lists\n// given two lists and their cards orders\nconst api_board_moveCard = async (jwt, list1Id, list2Id, cardOrder1, cardOrder2) => {\n  const response = await axios({\n    method: \"post\",\n    url: api_url + \"/board/updatecardmove\",\n    headers: { Authorization: jwt },\n    data: {\n      list1Id: list1Id,\n      list2Id: list2Id,\n      cardOrder1: cardOrder1,\n      cardOrder2: cardOrder2\n    },\n  });\n  return response.data;\n}\n// Create a new card\n// Returns the new created card with the game data associated with that card\n// Based on the gameId given\nconst api_board_addCard = async (jwt, cardId, listId, gameId) => {\n  const response = await axios({\n    method: \"post\",\n    url: api_url + \"/board/addcard\",\n    headers: { Authorization: jwt },\n    data: {\n      cardId: cardId,\n      listId: listId,\n      gameId: gameId,\n    },\n  });\n  return response.data;\n};\n\n// Gets all the board data\nconst api_get_board_data = async (jwt) => {\n  const response = await axios({\n    method: \"get\",\n    url: api_url + \"/board/getboard\",\n    headers: { Authorization: jwt },\n  });\n  return response.data;\n};\n\nexport {\n  api_board_createlist,\n  api_get_board_data,\n  api_board_updateListOrder,\n  api_board_addCard,\n  api_board_updateCardOrder,\n  api_board_moveCard\n};\n","import { api_url } from \"./config\";\nimport axios from 'axios';\n\n// Login of a user\n// Returns the status / the errors in case we have ones\nconst api_login = async (email, password) => {\n  try{\n  const response = await axios({\n    method: 'post',\n    url: api_url + \"/user/login\",\n    data: {\n      email: email,\n      password: password\n    }\n  })\n  return response.data\n} catch (err){\n  return \"error\"\n}\n};\n\nconst api_register = async (username, email, password) => {\n  try{\n    const response = await axios({\n      method: 'post',\n      url: api_url + \"/user/register\",\n      data: {\n        username: username,\n        email: email,\n        password: password\n      }\n    })\n    return response.data\n  } catch (err) {\n    return err\n  }\n}\nconst api_reauth = async (jwt) => {\n  const response = await axios({\n    method: \"get\",\n    url: api_url + \"/user/reauth\",\n    headers: { Authorization: jwt },\n  });\n  return response.data;\n};\n\nconst api_set_options = async (jwt, options) => {\n  const response = await axios({\n    method: \"post\",\n    url: api_url + \"/user/options/set\",\n    headers: { Authorization: jwt },\n    data: {\n      options: options,\n    },\n  });\n  return response.data;\n};\nexport { api_login, api_register, api_reauth, api_set_options };\n\n// testEmail@gmail.com\n// testPassword\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport List from \"./List/List\";\nimport AddNewCard from \"./AddNewCard/AddNewCard\";\nimport TitleCardInput from \"./TitleCard/TitleCardInput\";\nimport GameSearchModal from \"./GameSearchModal/GameSearchModal\";\nimport { api_url } from \"../../Api/config\";\nimport MainNav from \"../Navs/MainNav/MainNav\";\nimport \"../../style.scss\";\nimport \"./layout.scss\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { useState, useRef, useEffect } from \"react\";\nimport {\n  api_board_createlist,\n  api_get_board_data,\n  api_board_updateListOrder,\n  api_board_addCard,\n  api_board_updateCardOrder,\n  api_board_moveCard,\n} from \"../../Api/Board\";\nimport {\n  api_reauth,\n  api_set_options\n} from \"Api/user\";\nimport { useLocalStorage } from \"@rehooks/local-storage\";\nimport { OptionsContext, optionsContextDefaultValues } from \"Context.js\";\n\nconst Layout = ({ children }) => {\n  const dummyData = {\n    \"name\": \"User\",\n    \"email\": \"email\",\n    \"board\": {\n      \"listsOrder\": [\n        \"0d884a5d-ebcf-4ddd-a46c-61125e656f64\",\n        \"72d8f3db-bbb7-44a3-9830-9fa8cd1359c2\",\n        \"c956294a-ae6f-400d-8363-58b96a4647c6\",\n        \"7d60ebeb-cb82-4edb-bb08-17a575fb266b\"\n      ],\n      \"_id\": \"5f4fb524e0adcc043b3aba80\",\n      \"cards\": [\n        {\n          \"_id\": \"5f4fb569e0adcc043b3aba8e\",\n          \"cardId\": \"c19e63f9-3301-438e-8767-ce71059a84cd\",\n          \"gameId\": \"1937\"\n        },\n        {\n          \"_id\": \"5f4fb572e0adcc043b3aba92\",\n          \"cardId\": \"b135082a-32b2-43b2-8c50-d7f7f71e975f\",\n          \"gameId\": \"19565\"\n        },\n        {\n          \"_id\": \"5f4fb57ae0adcc043b3aba96\",\n          \"cardId\": \"bb2409d9-f1ff-4e06-81c6-cb38a053e692\",\n          \"gameId\": \"19560\"\n        },\n        {\n          \"_id\": \"5f4fb584e0adcc043b3aba9a\",\n          \"cardId\": \"c5ce14f7-a27e-498a-aa39-fcbd4b861ce2\",\n          \"gameId\": \"26192\"\n        },\n        {\n          \"_id\": \"5f4fb58be0adcc043b3aba9e\",\n          \"cardId\": \"99dde418-c13d-4fe5-b4de-7522f68be147\",\n          \"gameId\": \"119177\"\n        },\n        {\n          \"_id\": \"5f4fb594e0adcc043b3abaa2\",\n          \"cardId\": \"b2144551-6866-429a-970d-36b4196e4de2\",\n          \"gameId\": \"7609\"\n        },\n        {\n          \"_id\": \"5f4fb59ae0adcc043b3abaa6\",\n          \"cardId\": \"c65366ca-ba92-4bef-bf1c-55d8ebc18b85\",\n          \"gameId\": \"19564\"\n        },\n        {\n          \"_id\": \"5f4fb5a0e0adcc043b3abaaa\",\n          \"cardId\": \"f207b2e2-736e-4b9a-8f31-56d7f43d67ed\",\n          \"gameId\": \"9727\"\n        },\n        {\n          \"_id\": \"5f4fb5ace0adcc043b3abab0\",\n          \"cardId\": \"7e462d1b-ef2c-40d9-90df-20c1e2510ca2\",\n          \"gameId\": \"112874\"\n        },\n        {\n          \"_id\": \"5f4fb5b5e0adcc043b3abab4\",\n          \"cardId\": \"cc6a9e4d-9215-45d8-b6a0-55d3fbd89316\",\n          \"gameId\": \"126290\"\n        },\n        {\n          \"_id\": \"5f4fb5bfe0adcc043b3abab8\",\n          \"cardId\": \"25aa91dd-348b-405c-8300-7768b4cc9e7e\",\n          \"gameId\": \"1877\"\n        }\n      ],\n      \"lists\": [\n        {\n          \"cardsIds\": [\n            \"c19e63f9-3301-438e-8767-ce71059a84cd\",\n            \"b135082a-32b2-43b2-8c50-d7f7f71e975f\",\n            \"bb2409d9-f1ff-4e06-81c6-cb38a053e692\"\n          ],\n          \"_id\": \"5f4fb537e0adcc043b3aba85\",\n          \"listId\": \"0d884a5d-ebcf-4ddd-a46c-61125e656f64\",\n          \"title\": \"Want to play\"\n        },\n        {\n          \"cardsIds\": [\n            \"c5ce14f7-a27e-498a-aa39-fcbd4b861ce2\",\n            \"99dde418-c13d-4fe5-b4de-7522f68be147\"\n          ],\n          \"_id\": \"5f4fb543e0adcc043b3aba87\",\n          \"listId\": \"72d8f3db-bbb7-44a3-9830-9fa8cd1359c2\",\n          \"title\": \"Currently playing\"\n        },\n        {\n          \"cardsIds\": [\n            \"b2144551-6866-429a-970d-36b4196e4de2\",\n            \"c65366ca-ba92-4bef-bf1c-55d8ebc18b85\",\n            \"f207b2e2-736e-4b9a-8f31-56d7f43d67ed\"\n          ],\n          \"_id\": \"5f4fb558e0adcc043b3aba89\",\n          \"listId\": \"c956294a-ae6f-400d-8363-58b96a4647c6\",\n          \"title\": \"Done\"\n        },\n        {\n          \"cardsIds\": [\n            \"7e462d1b-ef2c-40d9-90df-20c1e2510ca2\",\n            \"cc6a9e4d-9215-45d8-b6a0-55d3fbd89316\",\n            \"25aa91dd-348b-405c-8300-7768b4cc9e7e\"\n          ],\n          \"_id\": \"5f4fb55de0adcc043b3aba8b\",\n          \"listId\": \"7d60ebeb-cb82-4edb-bb08-17a575fb266b\",\n          \"title\": \"Upcoming\"\n        }\n      ]\n    },\n    \"Date\": \"2020-09-02T15:07:16.309Z\",\n    \"__v\": 15,\n    \"options\": {\n      \"images\": true,\n      \"release_date_released\": false,\n      \"release_date_unreleased\": true\n    },\n    \"games\": {\n      \"1877\": {\n        \"_id\": \"5f4bb0ef8a8a97184150f04e\",\n        \"gameId\": \"1877\",\n        \"title\": \"Cyberpunk 2077\",\n        \"imageUrl\":  '/co1rft.jpg',\n        \"releaseDate\": \"1605744000\",\n        \"Date\": \"2020-08-30T14:00:15.544Z\",\n        \"__v\": 0\n      },\n      \"1937\": {\n        \"_id\": \"5f4fb56ce0adcc043b3aba8f\",\n        \"gameId\": \"1937\",\n        \"title\": \"Killzone: Shadow Fall\",\n        \"imageUrl\": \"/co1v40.jpg\",\n        \"releaseDate\": \"1384473600\",\n        \"Date\": \"2020-09-02T15:08:28.534Z\",\n        \"__v\": 0\n      },\n      \"7609\": {\n        \"_id\": \"5f4fb597e0adcc043b3abaa3\",\n        \"gameId\": \"7609\",\n        \"title\": \"Until Dawn\",\n        \"imageUrl\": \"/co1mqe.jpg\",\n        \"releaseDate\": \"1440460800\",\n        \"Date\": \"2020-09-02T15:09:11.157Z\",\n        \"__v\": 0\n      },\n      \"9727\": {\n        \"_id\": \"5f4fb5a2e0adcc043b3abaab\",\n        \"gameId\": \"9727\",\n        \"title\": \"SOMA\",\n        \"imageUrl\": \"/co2a20.jpg\",\n        \"releaseDate\": \"1442880000\",\n        \"Date\": \"2020-09-02T15:09:22.069Z\",\n        \"__v\": 0\n      },\n      \"19560\": {\n        \"_id\": \"5f4fb57ce0adcc043b3aba97\",\n        \"gameId\": \"19560\",\n        \"title\": \"God of War\",\n        \"imageUrl\": \"/co1tmu.jpg\",\n        \"releaseDate\": \"1524182400\",\n        \"Date\": \"2020-09-02T15:08:44.560Z\",\n        \"__v\": 0\n      },\n      \"19564\": {\n        \"_id\": \"5f4fb59ce0adcc043b3abaa7\",\n        \"gameId\": \"19564\",\n        \"title\": \"Death Stranding\",\n        \"imageUrl\": \"/co1syk.jpg\",\n        \"releaseDate\": \"1573171200\",\n        \"Date\": \"2020-09-02T15:09:16.390Z\",\n        \"__v\": 0\n      },\n      \"19565\": {\n        \"_id\": \"5f4fb574e0adcc043b3aba93\",\n        \"gameId\": \"19565\",\n        \"title\": \"Marvel's Spider-Man\",\n        \"imageUrl\": \"/co1r77.jpg\",\n        \"releaseDate\": \"1536278400\",\n        \"Date\": \"2020-09-02T15:08:36.625Z\",\n        \"__v\": 0\n      },\n      \"26192\": {\n        \"_id\": \"5f4baf418a8a97184150efe6\",\n        \"gameId\": \"26192\",\n        \"title\": \"The Last of Us Part II\",\n        \"imageUrl\": \"/co1r0o.jpg\",\n        \"releaseDate\": \"1592524800\",\n        \"Date\": \"2020-08-30T13:53:05.596Z\",\n        \"__v\": 0\n      },\n      \"112874\": {\n        \"_id\": \"5f4bc7918a8a97184150f0b9\",\n        \"gameId\": \"112874\",\n        \"title\": \"Horizon Forbidden West\",\n        \"imageUrl\": \"/co2a5n.jpg\",\n        \"releaseDate\": \"1640908800\",\n        \"Date\": \"2020-08-30T15:36:49.870Z\",\n        \"__v\": 0\n      },\n      \"119177\": {\n        \"_id\": \"5f4fb58de0adcc043b3aba9f\",\n        \"gameId\": \"119177\",\n        \"title\": \"Call Of Duty: Modern Warfare\",\n        \"imageUrl\": \"/co1rsg.jpg\",\n        \"releaseDate\": \"1571961600\",\n        \"Date\": \"2020-09-02T15:09:01.384Z\",\n        \"__v\": 0\n      },\n      \"126290\": {\n        \"_id\": \"5f4fb5b7e0adcc043b3abab5\",\n        \"gameId\": \"126290\",\n        \"title\": \"Far Cry 6\",\n        \"imageUrl\": \"/co2ecy.jpg\",\n        \"releaseDate\": \"1613606400\",\n        \"Date\": \"2020-09-02T15:09:43.239Z\",\n        \"__v\": 0\n      }\n    }\n  }\n  // User options shared state\n  const [optionsContext, setOptonsContext] = useState();\n  const [fetchingDataState, setFetchingDataState] = useState(true);\n  const [jwt] = useLocalStorage(\"jwt\");\n  // The order of the lists, is a array containing the id's of the lists\n  const [listorder, setListorder] = useState([]);\n  // Object containing cards, the key is the card id\n  // And the value is an Object containing the card information (including the game id)\n  const [cards, setCards] = useState({});\n  // Object containing lists, the key is the list id that can be found also in\n  // listorder array\n  const [lists, setLists] = useState({});\n  // state containing the id of the lists that has the modal opened\n  const [activeModalListId, setActiveModalListId] = useState(null);\n  // Store css class for the add new list button\n  const [addButtonVisibile, setAddButtonVisibile] = useState(\n    \"visibility-visible\"\n  );\n  // Store css class for the add new list text field\n  const [titleTextBoxVisible, settitleTextBoxVisible] = useState(\n    \"visibility-hidden\"\n  );\n  const [modalStatus, setModalStatus] = useState(false);\n  // store the new list title\n  const [titleEntry, setTitleEntry] = useState(\"\");\n  // ref for focusing on new list text field\n  const titleInputElement = useRef(null);\n  // State containing username, this is fetched from the backend when loading first tme\n  const [username, setUsername] = useState(null);\n  // Fetches data from the api and update the state with that data\n  const fetchDataFromApi = async () => {\n    setFetchingDataState(true)\n    //const user = await api_reauth(jwt)\n    const data = dummyData\n    setUsername(data.name)\n    // If options are not set we set them\n    if (typeof data.options === \"undefined\") {\n      api_set_options(jwt, optionsContextDefaultValues)\n      data.options = optionsContextDefaultValues\n    }\n    // Set the user options to the context\n    setOptonsContext(data.options)\n    // Processing the board and setting the data\n    const _listOrder = data.board.listsOrder;\n    const _lists = {};\n    const _cards = {};\n    data.board.lists.forEach((element) => {\n      _lists[element.listId] = {\n        cards: element.cardsIds,\n        title: element.title,\n      };\n    });\n    data.board.cards.forEach((element) => {\n      _cards[element.cardId] = data.games[element.gameId];\n    });\n    setLists(_lists);\n    setListorder(_listOrder);\n    setCards(_cards);\n    setFetchingDataState(false);\n  };\n  // Use Effect for calling the fetch data from api function\n  useEffect(() => {\n    fetchDataFromApi();\n  }, []);\n  // Use Effect for handling context changes and update the database\n  useEffect(() => {\n    if (!fetchingDataState){\n      const optionsCopy = {...optionsContext}\n      api_set_options(jwt, optionsCopy)\n    }\n  }, [optionsContext])\n  // Adds a game card on the list that has the search modal open at that time\n  // And is also sending the new created card on the backend and waits for a image response\n  const addGameCard = async (game) => {\n    const cardId = uuidv4();\n    const listId = activeModalListId;\n    const gameTitle = game.name;\n    const gameId = game.id;\n    setCards({ ...cards, [cardId]: { title: gameTitle } });\n    const newCards = lists[listId].cards.concat(cardId);\n    setLists({ ...lists, [listId]: { ...lists[listId], cards: newCards } });\n    const updatedCard = await api_board_addCard(jwt, cardId, listId, gameId);\n    setCards({ ...cards, [cardId]: updatedCard.game });\n  };\n\n  // React Beautiful DnD onDragEnd\n  // Handles the card moving logic and updates the api at every change\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    // reordering lists\n    if (type === \"list\") {\n      const newListOrder = listorder;\n      newListOrder.splice(source.index, 1);\n      newListOrder.splice(destination.index, 0, draggableId);\n      setListorder(newListOrder);\n      api_board_updateListOrder(jwt, newListOrder);\n      return;\n    }\n\n    // reordering cards\n    const startListId = source.droppableId;\n    const finishListId = destination.droppableId;\n\n    const startList = lists[startListId];\n    const finishList = lists[finishListId];\n\n    // Card moved in same list\n    if (startList === finishList) {\n      const curentListIndex = source.droppableId;\n      const list = lists[curentListIndex];\n      const newCardsList = Array.from(list.cards);\n      newCardsList.splice(source.index, 1);\n      newCardsList.splice(destination.index, 0, draggableId);\n\n      const newList = {\n        ...list,\n        cards: newCardsList,\n      };\n\n      setLists({\n        ...lists,\n        [curentListIndex]: newList,\n      });\n      api_board_updateCardOrder(jwt, curentListIndex, newCardsList);\n      return;\n    }\n\n    const startListCards = Array.from(startList.cards);\n    startListCards.splice(source.index, 1);\n    const newStart = {\n      ...startList,\n      cards: startListCards,\n    };\n\n    const finishListCards = Array.from(finishList.cards);\n    finishListCards.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finishList,\n      cards: finishListCards,\n    };\n\n    setLists({\n      ...lists,\n      [startListId]: newStart,\n      [finishListId]: newFinish,\n    });\n    api_board_moveCard(\n      jwt,\n      startListId,\n      finishListId,\n      newStart.cards,\n      newFinish.cards\n    );\n    return;\n  };\n  // Handles the add new list button click\n  // Auto focus the search element and scroll to left-most of the page\n  const addnewButtonClicked = () => {\n    titleInputElement.current.focus();\n    window.scrollTo(9999999, 0);\n  };\n  const titleInputOnChangeValueHandler = (val) => {\n    setTitleEntry(val.target.value);\n  };\n\n  // allow to pres enter only when input is on focus\n  const [enterKeyAllow, setEnterKeyAllow] = useState(false);\n\n  // Handle when the add new list text field is focused\n  // It hides the button and shows the text field\n  const addnewFocused = () => {\n    setAddButtonVisibile(\"visibility-hidden\");\n    settitleTextBoxVisible(\"visibility-visible\");\n    setEnterKeyAllow(true);\n  };\n\n  // Handle when the add new list text field is blured\n  // When is blured that means that the user clicked elsewhere\n  // And we can add a new list, also sending an API call with the new list\n  // It hides the button and shows the text field\n  const addnewBlured = () => {\n    setAddButtonVisibile(\"visibility-visible\");\n    settitleTextBoxVisible(\"visibility-hidden\");\n    // if no input do not add new list\n    if (titleEntry === \"\") return;\n    // After the users clicked out of the search we want to add a new list\n    const newId = uuidv4();\n\n    setLists({ ...lists, [newId]: { cards: [], title: titleEntry } });\n    const new_order = listorder;\n    new_order.push(newId);\n    setListorder(new_order);\n    console.log(titleInputElement.value);\n    setTitleEntry(\"\");\n    api_board_createlist(jwt, newId, titleEntry);\n  };\n\n  // Calls onBlur for new list text field after the user pressed enter\n  const addnewKeyPressed = (event) => {\n    if (event.key === \"Enter\" && enterKeyAllow === true) {\n      addnewBlured();\n      setEnterKeyAllow(false);\n    }\n  };\n\n  // When the add new card button is clicked\n  // We show the modal\n  const onAddNewCardClick = (list) => {\n    setModalStatus(true);\n    setActiveModalListId(list);\n  };\n\n  // Closes the modal when user clicks outside of it\n  const modalOutsideClicked = (event) => {\n    setModalStatus(false);\n    event.stopPropagation();\n  };\n\n  // When a game is clicked we add it to the list\n  const gameItemClicked = (game) => {\n    console.log(game);\n    setModalStatus(false);\n    addGameCard(game);\n  };\n\n  // Default return\n  // Returns the lists\n  return (\n    <OptionsContext.Provider value={[optionsContext, setOptonsContext]}>\n      <div>\n        <MainNav username={username}/>\n        <div className=\"layout-wrapper\">\n          <GameSearchModal\n            modalOutsideClicked={modalOutsideClicked}\n            status={modalStatus}\n            gameItemClicked={gameItemClicked}\n          />\n          <div className=\"layout-lists\">\n            <DragDropContext onDragEnd={onDragEnd}>\n              <Droppable droppableId=\"lists\" direction=\"horizontal\" type=\"list\">\n                {(provided) => (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    className=\"lists-wrapper\"\n                  >\n                    {listorder.map((item, index) => {\n                      const listCards = [];\n                      const curentList = lists[item];\n                      const title = curentList.title;\n                      const cardsOrder = curentList.cards;\n                      cardsOrder.forEach((i) => {\n                        if (typeof cards[i] !== \"undefined\")\n                          listCards.push({\n                            cardTitle: cards[i][\"title\"],\n                            cardId: i,\n                            cardImage: \"https://raw.githubusercontent.com/mihainsto/bowtie/demo-version/frontend/bowtie/gameDummyImages\" + cards[i][\"imageUrl\"],\n                            cardReleaseDate: cards[i][\"releaseDate\"],\n                          });\n                      });\n\n                      return (\n                        <List\n                          listCards={listCards}\n                          title={title}\n                          listId={item}\n                          index={index}\n                          onAddNewCardClick={() => onAddNewCardClick(item)}\n                        />\n                      );\n                    })}\n                    {provided.placeholder}\n                    <div className={\"addnew-list-card \" + titleTextBoxVisible}>\n                      <TitleCardInput\n                        onChangeValue={titleInputOnChangeValueHandler}\n                        ref={titleInputElement}\n                        focused={addnewFocused}\n                        blured={addnewBlured}\n                        onKeyPress={addnewKeyPressed}\n                        value={titleEntry}\n                      />\n                    </div>\n                    <div className={\"addnew-list-card \" + addButtonVisibile}>\n                      <AddNewCard\n                        cardText=\"+ Add new list\"\n                        height={60}\n                        onClick={addnewButtonClicked}\n                      />\n                    </div>\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </div>\n        </div>\n      </div>\n    </OptionsContext.Provider>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport \"./BlueButton.scss\";\n\n\nconst BlueButton = (props) => {\n    if (!props.disabled){\n      return (\n        <button className=\"bluebutton\" onClick={props.onClick}>\n        <div type=\"button\" className=\"bluebutton-text\">\n          {props.text}\n        </div>\n      </button>\n    )\n    } else if(props.disabled && props.spinner){\n      return (\n        <button className=\"bluebutton\" >\n        <div type=\"button\" className=\"bluebutton-text\">\n          {props.spinner}\n        </div>\n      </button>\n      )\n    }\n    else {\n      return (\n      <button className=\"bluebutton\" >\n        <div type=\"button\" className=\"bluebutton-text\">\n        </div>\n      </button>\n      )\n    }\n\n}\n\nexport default BlueButton","import React from \"react\";\nimport \"./LogoButtonsNav.scss\";\nimport BlueButton from \"../../Buttons/BlueButton/BlueButton\";\nconst LogoButtonsNav = () => {\n  return (\n    <nav className=\"logo-buttons-nav\">\n      <span className=\"logo\">Bowtie</span>\n\n      <div className=\"register-btn\">\n        <BlueButton text={\"Register\"} />\n      </div>\n\n      <div className=\"login-btn\">\n        <div className=\"login-btn-text\">Log In</div>\n      </div>\n    </nav>\n  );\n};\n\nexport default LogoButtonsNav;\n","import React from \"react\";\nimport \"./LandingPage.scss\";\nimport LogoButtonsNav from \"../Navs/LogoButtonsNav/LogoButtonsNav\"\nconst LandingPage = () => {\n  return (\n    <div className=\"LandingPage\">\n      <LogoButtonsNav />\n      {/* <div className=\"content-container\">\n        <div className=\"bigtext grid-right\">\n          Bowtie makes <br /> organizing your gaming life <br />a piece of cake.\n        </div>\n        <div className=\"smalltext1 grid-right\">\n          Put your gaming roadmap on paper, share it with your<br/> friends and take\n          part in the comunity you want.\n        </div>\n        <div className=\"smalltext2 grid-right\">\n          {\" \"}\n          Bowtie allows you to keep track of the upcoming games, <br/> get all the\n          news about them and much more.{\" \"}\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import React from \"react\";\nimport \"./LogoNav.scss\";\n\nconst LogoButtonsNav = () => {\n  return (\n    <nav className = \"logo-nav\">\n      <span className=\"logo\">Bowtie</span>\n    </nav>\n  );\n};\n\nexport default LogoButtonsNav;\n","import React from \"react\";\nimport \"./LoginPage.scss\";\nimport LogoNav from \"../Navs/LogoNav/LogoNav\";\nimport BlueButton from \"../Buttons/BlueButton/BlueButton\";\nimport Checkboxs1 from \"../Checkboxes/Checkboxs1/Checkboxs1\";\nimport { useState } from \"react\";\nimport { Link, useHistory} from \"react-router-dom\";\nimport { api_login } from \"../../Api/user\";\nimport { writeStorage } from \"@rehooks/local-storage\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nconst LoginPage = () => {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberCheck, setRememberCheck] = useState(false);\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const [showIncorrectFalir, setShowIncorrectFlair] = useState(false)\n  const inputFieldChanged = (value, setState) => {\n    setState(value.target.value);\n  };\n  const loginClicked = async () => {\n    setButtonDisabled(true);\n    const response = await api_login(email, password);\n    console.log(response[\"success\"]);\n    if (response[\"success\"] === true) {\n      console.log(\"Login Succes\");\n      //TODO: Insecure, to change in the future\n      writeStorage(\"jwt\", response[\"token\"]);\n      history.push(\"/board\");\n\n    } else {\n      setButtonDisabled(false)\n      setShowIncorrectFlair(true)\n      console.log(\"Login failed\");\n    }\n  };\n  const checkboxClicked = (value, setState) => {\n    if (rememberCheck === true) setState(false);\n    else setState(true);\n  };\n  const resetpassClicked = () => {\n    console.log(\"reset pass clicked\");\n  };\n  const handleKeyPress = (event) => {\n    if(event.key === 'Enter'){\n        loginClicked()\n    }\n  }\n  const spinner = <BeatLoader size={30} color={\"#eef7ff\"} css={`margin-top: 5px;`}></BeatLoader>;\n  return (\n    <div className=\"loginpage\">\n      <LogoNav />\n      <div className=\"form-container\">\n        <div className=\"form-wrapper\">\n          <div className=\"buttons\">\n            <span className=\"login-btn\">Log In</span>\n            <Link to=\"/register\" style={{ textDecoration: \"none\" }}>\n              <span className=\"register-btn\">Register</span>\n            </Link>\n          </div>\n          <div className={!showIncorrectFalir?\"display-none\":\"\"}>\n            <div className= \"incorrect-flair\" >\n              Incorrect email or password. \n            </div>\n          </div>\n          <div>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(value) => inputFieldChanged(value, setEmail)}\n              onKeyPress={handleKeyPress}\n            ></input>\n          </div>\n          <div>\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(value) => inputFieldChanged(value, setPassword)}\n              onKeyPress={handleKeyPress}\n            ></input>\n          </div>\n\n          <div className=\"remember-checkbox\">\n            <Checkboxs1\n              checked={rememberCheck}\n              onClick={(value) => checkboxClicked(value, setRememberCheck)}\n            />\n            <span>Remember me</span>\n          </div>\n          <div className=\"login-submit-btn\">\n            <BlueButton\n              text=\"Log In\"\n              onClick={loginClicked}\n              spinner={spinner}\n              disabled={buttonDisabled}\n            />\n          </div>\n          <div className=\"forgot-pass-text\">\n            Forgot password?{\" \"}\n            <span className=\"reset-pass-btn\" onClick={resetpassClicked}>\n              {\" \"}\n              Reset{\" \"}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport \"./RegisterPage.scss\";\nimport LogoNav from \"../Navs/LogoNav/LogoNav\";\nimport BlueButton from \"../Buttons/BlueButton/BlueButton\";\nimport { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {api_register} from \"../../Api/user\"\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst RegisterPage = () => {\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const [showIncorrectFalir, setShowIncorrectFlair] = useState(false)\n  const [incorrectFlairText, setIncorrectFlairText] = useState(\"\")\n  const [showSuccessFalir, setShowSuccessFalir] = useState(false)\n  const inputFieldChanged = (value, setState) => {\n    setState(value.target.value);\n  };\n  const registerClicked = async (value) => {\n    setButtonDisabled(true);\n    const response = await api_register(username, email, password);\n    console.log(response);\n    if (response[\"success\"] === true) {\n      console.log(\"Register Succes\");\n      setShowIncorrectFlair(false)\n      setShowSuccessFalir(true)\n      setTimeout(() =>{\n        history.push(\"/login\");\n    }, 1500);\n\n    } else {\n      setIncorrectFlairText(response.response.data)\n      setButtonDisabled(false)\n      setShowIncorrectFlair(true)\n    }\n  };\n  const spinner = <BeatLoader size={30} color={\"#eef7ff\"} css={`margin-top: 5px;`}></BeatLoader>;\n  return (\n    <div className=\"register-page\">\n      <LogoNav />\n      <div className=\"form-container\">\n        <div className=\"form-wrapper\">\n          <div className=\"buttons\">\n            <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\n              <span className=\"login-btn\">Log In</span>\n            </Link>\n            <span className=\"register-btn\">Register</span>\n          </div>\n          <div className={!showIncorrectFalir?\"display-none\":\"\"}>\n            <div className= \"incorrect-flair\" >\n              {incorrectFlairText}\n            </div>\n          </div>\n          <div className={!showSuccessFalir?\"display-none\":\"\"}>\n            <div className = \"success-text\">\n                Successfully registered, now please log in.\n            </div>\n          </div>\n          <div>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(value) => inputFieldChanged(value, setEmail)}\n            ></input>\n          </div>\n\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Username\"\n              value={username}\n              onChange={(value) => inputFieldChanged(value, setUsername)}\n            ></input>\n          </div>\n\n          <div>\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(value) => inputFieldChanged(value, setPassword)}\n            ></input>\n          </div>\n\n          <div className=\"register-submit-btn\">\n            <BlueButton text=\"Register\" onClick={registerClicked} spinner={spinner}\n              disabled={buttonDisabled}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Layout from \"../src/components/gamelist/Layout\";\nimport LandingPage from \"../src/components/LandingPage/LandingPage\";\nimport LoginPage from \"../src/components/LoginPage/LoginPage\";\nimport RegisterPage from \"../src/components/RegisterPage/RegisterPage\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/bowtie\" exact component={Layout} /> {/* debug */}\n        <Route path=\"/\" exact component={LandingPage} />\n        <Route path=\"/board\" component={Layout} />\n        <Route path=\"/login\" component={LoginPage} />\n        <Route path=\"/register\" component={RegisterPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n\n/*<div className=\"App\">\n<header className=\"App-header\">\n  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  <p>\n    Edit <code>src/App.js</code> and save to reload.\n  </p>\n  <a\n    className=\"App-link\"\n    href=\"https://reactjs.org\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    Learn React\n  </a>\n</header>\n</div> */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.3bf9c69f.svg\";"],"sourceRoot":""}