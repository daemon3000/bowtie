{"version":3,"sources":["logo.svg","components/gamelist/TitleCard/TitleCard.jsx","components/gamelist/CardImage/CardImage.jsx","components/gamelist/Card/Card.jsx","components/gamelist/AddNewCard/AddNewCard.jsx","components/gamelist/List/List.jsx","components/gamelist/SearchGameCard/SearchGameCard.jsx","components/gamelist/TitleCard/TitleCardInput.jsx","Api/games.js","components/gamelist/GameSearchModal/GameSearchModal.jsx","components/gamelist/Layout.jsx","components/Buttons/BlueButton/BlueButton.jsx","components/Navs/LogoButtonsNav/LogoButtonsNav.jsx","components/LandingPage/LandingPage.jsx","components/Navs/LogoNav/LogoNav.jsx","components/Checkboxes/Checkboxs1/Checkboxs1.jsx","Api/user.js","components/LoginPage/LoginPage.jsx","components/RegisterPage/RegisterPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TitleCard","props","className","title","onClick","onAddNewCardClick","size","CardImage","url","src","image","test","Card","draggableId","cardId","index","key","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","cardImage","cardText","AddNewCard","divStyle","height","toString","lineHeight","style","List","React","forwardRef","type","placeholder","onChange","onChangeValue","onFocus","focused","onBlur","blured","useState","useRef","listId","droppableId","droppableProps","listCards","map","item","cardTitle","onKeyPress","value","results","games_search","cancel","jwt","query","page","a","console","log","axios","CancelToken","source","method","api_url","headers","Authorization","data","cancelToken","token","response","result","isCancel","message","make_games_search","SearchResultsComponent","searchResults","backgroundImage","showMoreClicked","visibility","showMoreStatus","searchingStatus","GameSearchModal","useLocalStorage","searchInputElement","searchQuery","setSearchQuery","setSearchResults","setShowMoreStatus","setSearchingStatus","setPage","updateSearchData","length","concat","useEffect","delayDebounceFn","setTimeout","clearTimeout","status","current","focus","event","modalOutsideClicked","display","stopPropagation","color","target","Layout","children","listorder","setListorder","cards","cardImages","lists","setLists","addButtonVisibile","setAddButtonVisibile","titleTextBoxVisible","settitleTextBoxVisible","titleEntry","setTitleEntry","titleInputElement","addnewButtonClicked","window","scrollTo","titleInputOnChangeValueHandler","val","enterKeyAllow","setEnterKeyAllow","addnewFocused","addnewBlured","lists_ids","Object","keys","sort","last_id","new_id","parseInt","replace","new_order","push","addnewKeyPressed","modalStatus","setModalStatus","onDragEnd","destination","newListOrder","splice","startListId","finishListId","startList","finishList","startListCards","Array","from","newStart","finishListCards","newFinish","curentListIndex","list","newCardsList","newList","direction","curentList","forEach","i","TitleCardInput","BlueButton","text","LogoButtonsNav","LandingPage","useStyles","makeStyles","root","backgroundColor","outline","icon","borderRadius","width","boxShadow","background","checkedIcon","content","Checkboxs1","classes","Checkbox","disableRipple","clsx","inputProps","api_login","email","password","LoginPage","setEmail","setPassword","rememberCheck","setRememberCheck","inputFieldChanged","setState","loginClicked","writeStorage","to","textDecoration","checked","RegisterPage","username","setUsername","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d0352700.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\"\nimport \"./TitleCard.scss\"\nimport {RiMenuAddLine} from \"react-icons/ri\"\nconst TitleCard = (props) => {\n    return (\n      <div className=\"titleCard-card\">\n        <div className=\"titleCard-title-text\">\n          {props.title}\n        </div>\n        <span className=\"plusIcon\" onClick={props.onAddNewCardClick}>\n          <RiMenuAddLine size=\"40\"/>\n          </span>\n      </div>\n    )\n  }\n\nexport default TitleCard","import React from \"react\";\nimport { useState } from \"react\";\nimport \"./CardImage.scss\"\nconst CardImage = (props) => {\n  const cropSize = { x: 0, y: 0, height: 200, width: 200 };\n  const withHttp = (url) =>\n    !/^https?:\\/\\//i.test(url) ? `https://${url}` : url;\n\n  return (\n    <div className=\"cardImage\">\n      <img src={withHttp(props.image)}></img>\n    </div>\n  );\n};\n\nexport default CardImage;\n","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport \"./Card.scss\";\nimport CardImage from \"../CardImage/CardImage\";\nconst Card = (props) => {\n  return (\n    <Draggable\n      draggableId={props.cardId}\n      index={props.index}\n      key={props.cardId}\n    >\n      {(provided, snapshot) => (\n        <div\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          // TODO: Style when dragging\n          //isDragging={snapshot.isDragging}\n        >\n          <div className=\"card-card\">\n            <div className=\"card-content\">\n              {props.cardImage ? <CardImage image={props.cardImage} /> : null}\n              <div className=\"card-text\">{props.cardText}</div>\n            </div>\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Card;\n","import React from \"react\"\n\nimport \"./AddNewCard.scss\"\n\nconst AddNewCard = (props) => {\n\n  const divStyle = {\n    height: props.height.toString() + 'px',\n    lineHeight: props.height.toString() + 'px'\n  };\n\n    return (\n      <div className=\"addnewcard-card\" style={divStyle} onClick={props.onClick}>\n        <div className=\"addnewcard-text\">\n          {props.cardText}\n        </div>\n      </div>\n    )\n  }\n\nexport default AddNewCard","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport { useState, useRef } from \"react\";\n\n//import TitleCard from \"/../TitleCard/TitleCard\"\nimport TitleCard from \"../TitleCard/TitleCard\";\nimport Card from \"../Card/Card\";\nimport AddNewCard from \"../AddNewCard/AddNewCard\";\nimport SearchGameCard from \"../SearchGameCard/SearchGameCard\";\nimport \"./List.scss\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst List = (props) => {\n  const [newEntry, setNewEntry] = useState(\"\");\n  const [addButtonVisibile, setAddButtonVisibile] = useState(\n    \"list-visibility-visible\"\n  );\n  const [searchVisible, setSearchVisible] = useState(\"list-visibility-hidden\");\n  const searchElement = useRef(null);\n\n\n  return (\n    <Draggable\n      draggableId={props.listId}\n      index={props.index}\n      key={props.listId}\n    >\n      {(provided) => (\n        <div\n          className=\"list-list-wrapper\"\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n        >\n          <div className=\"list-title-card\" {...provided.dragHandleProps}>\n            <TitleCard title={props.title} onAddNewCardClick={props.onAddNewCardClick}/>\n          </div>\n          <div className=\"list-list list-overflow\">\n            <Droppable droppableId={props.listId} type=\"card\">\n              {(provided) => (\n                <div ref={provided.innerRef} {...provided.droppableProps}>\n                  {props.listCards.map((item, index) => (\n                    <div className=\"list-card\">\n                      <Card\n                        cardText={item.cardTitle}\n                        cardImage={item.cardImage}\n                        cardId={item.cardId}\n                        index={index}\n                      />\n                    </div>\n                  ))}\n                  <div className=\"list-padding-emptyadd\"></div>\n                  {provided.placeholder}\n                  <div className=\"list-bottom-padding\"></div> \n                </div>\n              )}\n            </Droppable>\n                  \n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default List;\n","import React from \"react\"\n\nimport \"./SearchGameCard.scss\"\n\nconst SearchGameCard = React.forwardRef((props, ref) => {\n    return (\n      <div className=\"searchgamecard-card\">\n        <div className=\"searchgamecard-text\">\n          <input type=\"text\" \n          placeholder=\"Search for a game\" \n          className=\"searchgamecard-input\"\n          onChange={props.onChangeValue}\n          ref = {ref}\n          onFocus= {props.focused}\n          onBlur= {props.blured}\n          \n          />\n        </div>\n      </div>\n    )\n  })\n\nexport default SearchGameCard","import React from \"react\"\n\nimport \"./TitleCard.scss\"\n\nconst TitleCard = React.forwardRef((props, ref) => {\n    return (\n      <div className=\"titleCard-card\">\n        <div className=\"titleCard-title-text\">\n        <input type=\"text\" \n          placeholder=\"Enter the title of the list\" \n          className=\"titleCard-card-input\"\n          onChange={props.onChangeValue}\n          ref = {ref}\n          onFocus= {props.focused}\n          onBlur= {props.blured}\n          onKeyPress= {props.onKeyPress}\n          value= {props.value}\n          />\n        </div>\n      </div>\n    )\n  })\n\nexport default TitleCard","import axios from \"axios\";\nimport { api_url } from \"./config\";\n\nlet  results = {}\nconst make_games_search = () => {\n  let cancel;\n\n  return async (jwt, query, page) => {\n    if (cancel) {\n      console.log(\"cancel\")\n      cancel.cancel();\n    }\n    cancel = axios.CancelToken.source();\n    try {\n      if (results[query]){\n        return results[query]\n      }\n      const response = await axios(\n        {\n          method: \"post\",\n          url: api_url + \"/games/search\",\n          headers: { Authorization: jwt },\n          data: {\n            query: query,\n            page: page,\n          },\n        },\n        { cancelToken: cancel.token }\n      );\n      results = response.data\n      const result = response.data;\n      return result;\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        // Handle if request was cancelled\n        console.log(\"Request canceled\", error.message);\n      } else {\n        // Handle usual errors\n        console.log(\"Something went wrong: \", error.message);\n      }\n    }\n  };\n};\n\nexport const games_search = make_games_search();\n","import React from \"react\";\nimport \"./GameSearchModal.scss\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { games_search } from \"../../../Api/games\";\nimport { useLocalStorage } from \"@rehooks/local-storage\";\nimport { queryByRole } from \"@testing-library/react\";\nconst dumySearchResults = [\n  \"Mini Metro\",\n  \"Metro Exodus\",\n  \"Metro Last Light\",\n  \"Metro 2033\",\n];\n\nconst SearchResultsComponent = (props) => {\n  if (props.searchResults) {\n    return (\n      <div className=\"search-results-container\">\n        {props.searchResults.map((item) => (\n          <div className=\"search-result-element\">\n            <div className=\"image\" style={{backgroundImage:\"url(https://\"+item[\"image\"]+\")\"}}></div>\n            {/* <img src={\"https://\"+item[\"image\"]} /> */}\n            <div className=\"search-result-text\">\n            {item[\"name\"]}\n            </div>\n          </div>\n        ))}\n        <div\n          className=\"see-more-btn\"\n          onClick={props.showMoreClicked}\n          style={{ visibility: props.showMoreStatus ? \"visible\" : \"hidden\" }}\n        >\n          Show More\n        </div>\n      </div>\n    );\n  } else if (props.searchingStatus === true) {\n    return (\n      <div className=\"search-results-container\">\n        <div className=\"searching-status-label\">Searching</div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n};\nconst GameSearchModal = (props) => {\n  const [jwt] = useLocalStorage(\"jwt\");\n  const searchInputElement = useRef(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState(null);\n  const [showMoreStatus, setShowMoreStatus] = useState(false);\n  const [searchingStatus, setSearchingStatus] = useState(false);\n  const [page, setPage] = useState(1);\n\n  const updateSearchData = async (query, page) => {\n    console.log({ query: query, page: page });\n    if (query.length > 3 && page === 1) {\n      const response = await games_search(jwt, query, page);\n      console.log(searchQuery);\n      console.log(query);\n      setSearchResults(response);\n      setShowMoreStatus(true);\n      setSearchingStatus(false);\n    } else if (query.length > 3 && page > 1) {\n      const response = await games_search(jwt, query, page);\n      setSearchResults(searchResults.concat(response));\n      if (response.length !== 0) {\n        setShowMoreStatus(true);\n      }\n    }\n  };\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(() => {\n      console.log(searchQuery);\n      setPage(1);\n      updateSearchData(searchQuery, page);\n    }, 300);\n\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchQuery]);\n\n  const searchInputChanged = (event) => {\n    setSearchingStatus(true);\n    setSearchQuery(event.target.value);\n  };\n  useEffect(() => {\n    if (props.status) {\n      searchInputElement.current.focus();\n    }\n  }, [props.status]);\n\n  const showMoreClicked = () => {\n    updateSearchData(searchQuery, page + 1);\n    setShowMoreStatus(false);\n    setPage(page + 1);\n  };\n  return (\n    <div\n      className=\"modal-wrapper\"\n      onClick={(event) => {\n        props.modalOutsideClicked(event);\n        setSearchQuery(\"\");\n        setSearchResults(null);\n      }}\n      style={{ display: props.status ? \"block\" : \"none\" }}\n    >\n      <div\n        className=\"game-search-modal\"\n        onClick={(event) => event.stopPropagation()}\n      >\n        <span className=\"icon\">\n          {\" \"}\n          <FaSearch size=\"40\" style={{ color: \"rgb(238,247,255)\" }} />{\" \"}\n        </span>\n\n        <span className=\"search-box\">\n          <input\n            type=\"text\"\n            placeholder=\"Search for a game\"\n            ref={searchInputElement}\n            value={searchQuery}\n            onChange={searchInputChanged}\n          ></input>\n        </span>\n\n        <SearchResultsComponent\n          searchResults={searchResults}\n          showMoreClicked={showMoreClicked}\n          showMoreStatus={showMoreStatus}\n          searchingStatus={searchingStatus}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default GameSearchModal;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport List from \"./List/List\";\nimport AddNewCard from \"./AddNewCard/AddNewCard\";\nimport TitleCardInput from \"./TitleCard/TitleCardInput\";\nimport GameSearchModal from \"./GameSearchModal/GameSearchModal\";\nimport \"../../style.scss\";\nimport \"./layout.scss\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { useState, useRef } from \"react\";\n\nconst Layout = ({ children }) => {\n  const [listorder, setListorder] = useState([\"list-1\", \"list-2\", \"list-3\"]);\n  const [cards, setCards] = useState({\n    \"1\": \"Metro Exodus\",\n    \"2\": \"The Last of Us\",\n    \"3\": \"Doom Eternal\",\n    \"4\": \"Horizon Zero Dawn\",\n    \"5\": \"Nier Automata\",\n    \"6\": \"Until Dawn\",\n    \"7\": \"Gears 5\",\n    \"8\": \"Metro Last Light\",\n    \"9\": \"Life is Strange 2\",\n    \"10\": \"Control\",\n    \"11\": \"Star Wars Jedi: Fallen Order\",\n    \"12\": \"Just Cause 4\",\n  });\n  const [cardImages, setCardsImages] = useState({\n    \"1\": \"https://i.imgur.com/SvPjEBF.jpg\",\n    \"2\": \"https://i.imgur.com/SvPjEBF.jpg\",\n    \"3\": \"https://i.imgur.com/SvPjEBF.jpg\",\n    \"4\": \"https://i.imgur.com/SvPjEBF.jpg\",\n    \"5\": \"https://i.imgur.com/SvPjEBF.jpg\",\n  });\n  const [lists, setLists] = useState({\n    \"list-1\": { cards: [\"1\", \"2\", \"3\"], title: \"Completed 2020\" },\n    \"list-2\": { cards: [\"4\", \"5\", \"6\", \"7\"], title: \"To play\" },\n    \"list-3\": {\n      cards: [\"8\", \"9\", \"10\", \"11\", \"12\"],\n      title: \"Completed 2019\",\n    },\n  });\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    // reordering lists\n    if (type === \"list\") {\n      const newListOrder = listorder;\n      newListOrder.splice(source.index, 1);\n      newListOrder.splice(destination.index, 0, draggableId);\n      setListorder(newListOrder);\n      return;\n    }\n\n    // reordering cards\n    const startListId = source.droppableId;\n    const finishListId = destination.droppableId;\n\n    const startList = lists[startListId];\n    const finishList = lists[finishListId];\n\n    if (startList === finishList) {\n      const curentListIndex = source.droppableId;\n      const list = lists[curentListIndex];\n      const newCardsList = Array.from(list.cards);\n\n      newCardsList.splice(source.index, 1);\n      newCardsList.splice(destination.index, 0, draggableId);\n\n      const newList = {\n        ...list,\n        cards: newCardsList,\n      };\n\n      setLists({\n        ...lists,\n        [curentListIndex]: newList,\n      });\n      return;\n    }\n\n    const startListCards = Array.from(startList.cards);\n    startListCards.splice(source.index, 1);\n    const newStart = {\n      ...startList,\n      cards: startListCards,\n    };\n\n    const finishListCards = Array.from(finishList.cards);\n    finishListCards.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finishList,\n      cards: finishListCards,\n    };\n\n    setLists({\n      ...lists,\n      [startListId]: newStart,\n      [finishListId]: newFinish,\n    });\n    return;\n  };\n\n  const [addButtonVisibile, setAddButtonVisibile] = useState(\n    \"visibility-visible\"\n  );\n  const [titleTextBoxVisible, settitleTextBoxVisible] = useState(\n    \"visibility-hidden\"\n  );\n  const [titleEntry, setTitleEntry] = useState(\"\");\n  const titleInputElement = useRef(null);\n\n  const addnewButtonClicked = () => {\n    titleInputElement.current.focus();\n    window.scrollTo(9999999, 0);\n  };\n  const titleInputOnChangeValueHandler = (val) => {\n    setTitleEntry(val.target.value);\n  };\n\n  // allow to pres enter only when input is on focus\n  const [enterKeyAllow, setEnterKeyAllow] = useState(false);\n\n  const addnewFocused = () => {\n    setAddButtonVisibile(\"visibility-hidden\");\n    settitleTextBoxVisible(\"visibility-visible\");\n    setEnterKeyAllow(true);\n  };\n\n  const addnewBlured = () => {\n    setAddButtonVisibile(\"visibility-visible\");\n    settitleTextBoxVisible(\"visibility-hidden\");\n    // if no input do not add new list\n    if (titleEntry == \"\") return;\n    // After the users clicked out of the search we want to add a new list\n    const lists_ids = Object.keys(lists).sort();\n    const last_id = lists_ids[lists_ids.length - 1];\n    const new_id =\n      \"list-\" + (parseInt(last_id.replace(\"list-\", \"\")) + 1).toString();\n\n    setLists({ ...lists, [new_id]: { cards: [], title: titleEntry } });\n    const new_order = listorder;\n    new_order.push(new_id);\n    setListorder(new_order);\n    console.log(titleInputElement.value);\n    setTitleEntry(\"\");\n  };\n  const addnewKeyPressed = (event) => {\n    if (event.key === \"Enter\" && enterKeyAllow === true) {\n      addnewBlured();\n      setEnterKeyAllow(false);\n    }\n  };\n  const [modalStatus, setModalStatus] = useState(false);\n  const onAddNewCardClick = (list) => {\n    //console.log(list);\n    setModalStatus(true);\n    //searchInputElement.current.focus();\n    //console.log(searchInputElement.curent.value)\n  };\n  const modalOutsideClicked = (event) => {\n    setModalStatus(false);\n    event.stopPropagation();\n  };\n  return (\n    <div className=\"layout-wrapper\">\n      <GameSearchModal\n        modalOutsideClicked={modalOutsideClicked}\n        status={modalStatus}\n      />\n      <div className=\"layout-lists\">\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"lists\" direction=\"horizontal\" type=\"list\">\n            {(provided) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"lists-wrapper\"\n              >\n                {listorder.map((item, index) => {\n                  const listCards = [];\n                  const curentList = lists[item];\n                  const title = curentList.title;\n                  const cardsOrder = curentList.cards;\n\n                  cardsOrder.forEach((i) => {\n                    listCards.push({\n                      cardTitle: cards[i],\n                      cardId: i,\n                      cardImage: cardImages[i],\n                    });\n                  });\n\n                  return (\n                    <List\n                      listCards={listCards}\n                      title={title}\n                      listId={item}\n                      index={index}\n                      onAddNewCardClick={() => onAddNewCardClick(item)}\n                    />\n                  );\n                })}\n                {provided.placeholder}\n                <div className={\"addnew-list-card \" + titleTextBoxVisible}>\n                  <TitleCardInput\n                    onChangeValue={titleInputOnChangeValueHandler}\n                    ref={titleInputElement}\n                    focused={addnewFocused}\n                    blured={addnewBlured}\n                    onKeyPress={addnewKeyPressed}\n                    value={titleEntry}\n                  />\n                </div>\n                <div className={\"addnew-list-card \" + addButtonVisibile}>\n                  <AddNewCard\n                    cardText=\"+ Add new list\"\n                    height={60}\n                    onClick={addnewButtonClicked}\n                  />\n                </div>\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport \"./BlueButton.scss\";\n\n\nconst BlueButton = (props) => {\n    return (\n        <button className=\"bluebutton\" onClick={props.onClick}>\n        <div type=\"button\" className=\"bluebutton-text\">\n          {props.text}\n        </div>\n      </button>\n    )\n}\n\nexport default BlueButton","import React from \"react\";\nimport \"./LogoButtonsNav.scss\";\nimport BlueButton from \"../../Buttons/BlueButton/BlueButton\";\nconst LogoButtonsNav = () => {\n  return (\n    <nav className=\"logobuttonsnav\">\n      <span className=\"logo\">Bowtie</span>\n\n      <div className=\"register-btn\">\n        <BlueButton text={\"Register\"} />\n      </div>\n\n      <div className=\"loginbtn\">\n        <div className=\"loginbtn-text\">Log In</div>\n      </div>\n    </nav>\n  );\n};\n\nexport default LogoButtonsNav;\n","import React from \"react\";\nimport \"./LandingPage.scss\";\nimport LogoButtonsNav from \"../Navs/LogoButtonsNav/LogoButtonsNav\"\nconst LandingPage = () => {\n  return (\n    <div className=\"LandingPage\">\n      <LogoButtonsNav />\n      {/* <div className=\"content-container\">\n        <div className=\"bigtext grid-right\">\n          Bowtie makes <br /> organizing your gaming life <br />a piece of cake.\n        </div>\n        <div className=\"smalltext1 grid-right\">\n          Put your gaming roadmap on paper, share it with your<br/> friends and take\n          part in the comunity you want.\n        </div>\n        <div className=\"smalltext2 grid-right\">\n          {\" \"}\n          Bowtie allows you to keep track of the upcoming games, <br/> get all the\n          news about them and much more.{\" \"}\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import React from \"react\";\nimport \"./LogoNav.scss\";\n\nconst LogoButtonsNav = () => {\n  return (\n    <nav className = \"logonav\">\n      <span className=\"logo\">Bowtie</span>\n    </nav>\n  );\n};\n\nexport default LogoButtonsNav;\n","import React from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles({\n    root: {\n      '&:hover': {\n        backgroundColor: 'transparent',\n      },\n      '&:focus': {\n        outline: 'none',\n      },\n    },\n    icon: {\n      borderRadius: 0,\n      width: 30,\n      height: 30,\n      boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n      backgroundColor: '#f5f8fa',\n      backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n      // '$root.Mui-focusVisible &': {\n      //   outline: '1px auto rgba(19,124,189,.6)',\n      //   outlineOffset: 2,\n      // },\n\n      'input:hover ~ &': {\n        backgroundColor: '#ebf1f5',\n      },\n      'input:disabled ~ &': {\n        boxShadow: 'none',\n        background: 'rgba(206,217,224,.5)',\n      },\n\n    },\n    checkedIcon: {\n      backgroundColor: 'rgba(88, 94, 234, 0.8)',\n      backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n      '&:before': {\n        display: 'block',\n        width: 30,\n        height: 30,\n        backgroundImage:\n          \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n          \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n          \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n        content: '\"\"',\n      },\n      'input:hover ~ &': {\n        backgroundColor: 'rgba(88, 94, 234, 1)',\n      },\n    },\n  });\n\n\nconst Checkboxs1 = (props) => {\n    const classes = useStyles();\n\n    return (\n        \n        <Checkbox\n        className={classes.root}\n        disableRipple\n        color=\"default\"\n        checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n        icon={<span className={classes.icon} />}\n        inputProps={{ 'aria-label': 'decorative checkbox' }}\n        {...props}\n      />\n    )\n}\n\nexport default Checkboxs1","import { api_url } from \"./config\";\nimport axios from 'axios';\n\nconst api_login = async (email, password) => {\n  const response = await axios({\n    method: 'post',\n    url: api_url + \"/user/login\",\n    data: {\n      email: email,\n      password: password\n    }\n  })\n  return response.data\n};\n\nexport { api_login };\n\n// testEmail@gmail.com\n// testPassword\n","import React from \"react\";\nimport \"./LoginPage.scss\";\nimport LogoNav from \"../Navs/LogoNav/LogoNav\";\nimport BlueButton from \"../Buttons/BlueButton/BlueButton\";\nimport Checkboxs1 from \"../Checkboxes/Checkboxs1/Checkboxs1\";\nimport { useState } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {api_login} from \"../../Api/user\"\nimport { writeStorage } from '@rehooks/local-storage';\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberCheck, setRememberCheck] = useState(false);\n  const inputFieldChanged = (value, setState) => {\n    setState(value.target.value);\n  };\n  const loginClicked = async (value) => {\n    const response = await api_login(email, password)\n    console.log(response[\"success\"])\n    if (response[\"success\"] === true){\n      console.log(\"Login Succes\")\n      //TODO: Insecure, to change in the future\n      writeStorage('jwt', response[\"token\"])\n    }\n    else{\n      console.log(\"Login failed\")\n    }\n  };\n  const checkboxClicked = (value, setState) => {\n    if (rememberCheck === true)\n      setState(false)\n    else\n      setState(true)\n  };\n  const resetpassClicked = () => {\n    console.log(\"reset pass clicked\")\n  }\n  return (\n    <div className=\"loginpage\">\n      <LogoNav />\n      <div className=\"form-container\">\n        <div className=\"form-wrapper\">\n          <div className=\"buttons\">\n            <span className=\"login-btn\">Log In</span>\n            <Link to=\"/register\" style={{ textDecoration: 'none' }}>\n              <span className=\"register-btn\">Register</span>\n            </Link>\n          </div>\n\n          <div>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(value) => inputFieldChanged(value, setEmail)}\n            ></input>\n          </div>\n          <div>\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(value) => inputFieldChanged(value, setPassword)}\n            ></input>\n          </div>\n\n          <div className=\"remember-checkbox\">\n            <Checkboxs1\n              checked={rememberCheck}\n              onClick={(value) => checkboxClicked(value, setRememberCheck)}\n            />\n            <span>Remember me</span>\n          </div>\n          <div className=\"login-submit-btn\">\n            <BlueButton text=\"Log In\" onClick={loginClicked} />\n          </div>\n          <div className=\"forgot-pass-text\">\n            Forgot password? <span className=\"reset-pass-btn\" onClick={resetpassClicked}> Reset </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport \"./RegisterPage.scss\";\nimport LogoNav from \"../Navs/LogoNav/LogoNav\";\nimport BlueButton from \"../Buttons/BlueButton/BlueButton\";\nimport Checkboxs1 from \"../Checkboxes/Checkboxs1/Checkboxs1\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst RegisterPage = () => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberCheck, setRememberCheck] = useState(false);\n  const inputFieldChanged = (value, setState) => {\n    setState(value.target.value);\n  };\n  const registerClicked = (value) => {\n    console.log(\"register clicked\");\n  };\n\n  return (\n    <div className=\"registerpage\">\n      <LogoNav />\n      <div className=\"form-container\">\n        <div className=\"form-wrapper\">\n          <div className=\"buttons\">\n            <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\n              <span className=\"login-btn\">Log In</span>\n            </Link>\n            <span className=\"register-btn\">Register</span>\n          </div>\n\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Username\"\n              value={username}\n              onChange={(value) => inputFieldChanged(value, setUsername)}\n            ></input>\n          </div>\n\n          <div>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(value) => inputFieldChanged(value, setEmail)}\n            ></input>\n          </div>\n\n          <div>\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(value) => inputFieldChanged(value, setPassword)}\n            ></input>\n          </div>\n\n          <div className=\"register-submit-btn\">\n            <BlueButton text=\"Register\" onClick={registerClicked} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import React from 'react';\nimport logo from './logo.svg';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Layout from \"../src/components/gamelist/Layout\"\nimport LandingPage from \"../src/components/LandingPage/LandingPage\"\nimport LoginPage from \"../src/components/LoginPage/LoginPage\"\nimport RegisterPage from \"../src/components/RegisterPage/RegisterPage\"\nfunction App() {\n  return (\n  <Router>\n    <Switch>\n    <Route path=\"/bowtie\" exact component={Layout}/> {/* debug */}\n    <Route path=\"/\" exact component={LandingPage}/>\n    <Route path=\"/board\" component={Layout}/>\n    <Route path=\"/login\" component={LoginPage}/>\n    <Route path=\"/register\" component={RegisterPage}/>\n    </Switch>\n  </Router>\n  \n  );\n}\n\nexport default App;\n\n /*<div className=\"App\">\n<header className=\"App-header\">\n  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  <p>\n    Edit <code>src/App.js</code> and save to reload.\n  </p>\n  <a\n    className=\"App-link\"\n    href=\"https://reactjs.org\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    Learn React\n  </a>\n</header>\n</div> */ ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}