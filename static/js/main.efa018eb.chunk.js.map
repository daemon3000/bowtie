{"version":3,"sources":["logo.svg","components/gamelist/TitleCard/TitleCard.jsx","components/gamelist/CardImage/CardImage.jsx","components/gamelist/Card/Card.jsx","components/gamelist/AddNewCard/AddNewCard.jsx","components/gamelist/SearchGameCard/SearchGameCard.jsx","components/gamelist/List/List.jsx","components/gamelist/TitleCard/TitleCardInput.jsx","components/gamelist/Layout.jsx","components/Buttons/BlueButton/BlueButton.jsx","components/Navs/LogoButtonsNav/LogoButtonsNav.jsx","components/LandingPage/LandingPage.jsx","components/Navs/LogoNav/LogoNav.jsx","components/Checkboxes/Checkboxs1/Checkboxs1.jsx","components/LoginPage/LoginPage.jsx","components/RegisterPage/RegisterPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TitleCard","props","className","title","CardImage","url","src","image","test","Card","draggableId","cardId","index","key","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","cardImage","cardText","AddNewCard","divStyle","height","toString","lineHeight","style","onClick","SearchGameCard","React","forwardRef","type","placeholder","onChange","onChangeValue","onFocus","focused","onBlur","blured","List","useState","setNewEntry","addButtonVisibile","setAddButtonVisibile","searchVisible","setSearchVisible","searchElement","useRef","searchOnChangeValueHandler","val","target","value","addNewClicked","current","focus","searchFocused","searchBlured","listId","droppableId","droppableProps","listCards","map","item","cardTitle","Layout","children","listorder","setListorder","cards","cardImages","lists","setLists","titleTextBoxVisible","settitleTextBoxVisible","titleEntry","setTitleEntry","titleInputElement","addnewButtonClicked","window","scrollTo","titleInputOnChangeValueHandler","lists_ids","Object","keys","sort","last_id","length","new_id","parseInt","replace","new_order","push","console","log","onDragEnd","result","destination","source","newListOrder","splice","startListId","finishListId","startList","finishList","startListCards","Array","from","newStart","finishListCards","newFinish","curentListIndex","list","newCardsList","newList","direction","curentList","forEach","i","TitleCardInput","BlueButton","text","LogoButtonsNav","LandingPage","useStyles","makeStyles","root","backgroundColor","outline","icon","borderRadius","width","boxShadow","backgroundImage","background","checkedIcon","display","content","Checkboxs1","classes","Checkbox","disableRipple","color","clsx","inputProps","LoginPage","email","setEmail","password","setPassword","rememberCheck","setRememberCheck","inputFieldChanged","setState","to","textDecoration","checked","RegisterPage","username","setUsername","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.efa018eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\"\n\nimport \"./TitleCard.scss\"\n\nconst TitleCard = (props) => {\n    return (\n      <div className=\"titleCard-card\">\n        <div className=\"titleCard-title-text\">\n          {props.title}\n        </div>\n      </div>\n    )\n  }\n\nexport default TitleCard","import React from \"react\";\nimport { useState } from \"react\";\nimport \"./CardImage.scss\"\nconst CardImage = (props) => {\n  const cropSize = { x: 0, y: 0, height: 200, width: 200 };\n  const withHttp = (url) =>\n    !/^https?:\\/\\//i.test(url) ? `https://${url}` : url;\n\n  return (\n    <div className=\"cardImage\">\n      <img src={withHttp(props.image)}></img>\n    </div>\n  );\n};\n\nexport default CardImage;\n","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport \"./Card.scss\";\nimport CardImage from \"../CardImage/CardImage\";\nconst Card = (props) => {\n  return (\n    <Draggable\n      draggableId={props.cardId}\n      index={props.index}\n      key={props.cardId}\n    >\n      {(provided, snapshot) => (\n        <div\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          // TODO: Style when dragging\n          //isDragging={snapshot.isDragging}\n        >\n          <div className=\"card-card\">\n            <div className=\"card-content\">\n              {props.cardImage ? <CardImage image={props.cardImage} /> : null}\n              <div className=\"card-text\">{props.cardText}</div>\n            </div>\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Card;\n","import React from \"react\"\n\nimport \"./AddNewCard.scss\"\n\nconst AddNewCard = (props) => {\n\n  const divStyle = {\n    height: props.height.toString() + 'px',\n    lineHeight: props.height.toString() + 'px'\n  };\n\n    return (\n      <div className=\"addnewcard-card\" style={divStyle} onClick={props.onClick}>\n        <div className=\"addnewcard-text\">\n          {props.cardText}\n        </div>\n      </div>\n    )\n  }\n\nexport default AddNewCard","import React from \"react\"\n\nimport \"./SearchGameCard.scss\"\n\nconst SearchGameCard = React.forwardRef((props, ref) => {\n    return (\n      <div className=\"searchgamecard-card\">\n        <div className=\"searchgamecard-text\">\n          <input type=\"text\" \n          placeholder=\"Search for a game\" \n          className=\"searchgamecard-input\"\n          onChange={props.onChangeValue}\n          ref = {ref}\n          onFocus= {props.focused}\n          onBlur= {props.blured}\n          \n          />\n        </div>\n      </div>\n    )\n  })\n\nexport default SearchGameCard","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport { useState, useRef } from \"react\";\n\n//import TitleCard from \"/../TitleCard/TitleCard\"\nimport TitleCard from \"../TitleCard/TitleCard\";\nimport Card from \"../Card/Card\";\nimport AddNewCard from \"../AddNewCard/AddNewCard\";\nimport SearchGameCard from \"../SearchGameCard/SearchGameCard\";\nimport \"./List.scss\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst List = (props) => {\n  const [newEntry, setNewEntry] = useState(\"\");\n  const [addButtonVisibile, setAddButtonVisibile] = useState(\n    \"list-visibility-visible\"\n  );\n  const [searchVisible, setSearchVisible] = useState(\"list-visibility-hidden\");\n  const searchElement = useRef(null);\n\n  const searchOnChangeValueHandler = (val) => {\n    setNewEntry(val.target.value);\n  };\n\n  const addNewClicked = () => {\n    searchElement.current.focus();\n  };\n  const searchFocused = () => {\n    setAddButtonVisibile(\"list-visibility-hidden\");\n    setSearchVisible(\"list-visibility-visible\");\n  };\n  const searchBlured = () => {\n    setAddButtonVisibile(\"list-visibility-visible\");\n    setSearchVisible(\"list-visibility-hidden\");\n  };\n  return (\n    <Draggable\n      draggableId={props.listId}\n      index={props.index}\n      key={props.listId}\n    >\n      {(provided) => (\n        <div\n          className=\"list-list-wrapper\"\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n        >\n          <div className=\"list-title-card\" {...provided.dragHandleProps}>\n            <TitleCard title={props.title} />\n          </div>\n          <div className=\"list-list list-overflow\">\n            <Droppable droppableId={props.listId} type=\"card\">\n              {(provided) => (\n                <div ref={provided.innerRef} {...provided.droppableProps}>\n                  {props.listCards.map((item, index) => (\n                    <div className=\"list-card\">\n                      <Card\n                        cardText={item.cardTitle}\n                        cardImage={item.cardImage}\n                        cardId={item.cardId}\n                        index={index}\n                      />\n                    </div>\n                  ))}\n                  <div className=\"list-padding-emptyadd\"></div>\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n\n            <div className=\"list-card\" className={searchVisible}>\n              <SearchGameCard\n                onChangeValue={searchOnChangeValueHandler}\n                ref={searchElement}\n                focused={searchFocused}\n                blured={searchBlured}\n              />\n            </div>\n            <div className=\"list-add-new-wrapper\">\n              <div\n                className=\"list-card\"\n                className={addButtonVisibile}\n                onClick={addNewClicked}\n              >\n                <AddNewCard cardText=\"+ Add new game\" height={60}/>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default List;\n","import React from \"react\"\n\nimport \"./TitleCard.scss\"\n\nconst TitleCard = React.forwardRef((props, ref) => {\n    return (\n      <div className=\"titleCard-card\">\n        <div className=\"titleCard-title-text\">\n        <input type=\"text\" \n          placeholder=\"Enter the title of the list\" \n          className=\"titleCard-card-input\"\n          onChange={props.onChangeValue}\n          ref = {ref}\n          onFocus= {props.focused}\n          onBlur= {props.blured}\n          \n          />\n        </div>\n      </div>\n    )\n  })\n\nexport default TitleCard","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport List from \"./List/List\";\nimport AddNewCard from \"./AddNewCard/AddNewCard\";\nimport TitleCardInput from \"./TitleCard/TitleCardInput\";\nimport \"../../style.scss\";\nimport \"./layout.scss\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { useState, useRef } from \"react\";\n\nconst Layout = ({ children }) => {\n  const [listorder, setListorder] = useState([\"list-1\", \"list-2\", \"list-3\"]);\n  const [cards, setCards] = useState({\n    \"1\": \"Metro Exodus\",\n    \"2\": \"The Last of Us\",\n    \"3\": \"Doom Eternal\",\n    \"4\": \"Horizon Zero Dawn\",\n    \"5\": \"Nier Automata\",\n    \"6\": \"Until Dawn\",\n    \"7\": \"Gears 5\",\n    \"8\": \"Metro Last Light\",\n    \"9\": \"Life is Strange 2\",\n    \"10\": \"Control\",\n    \"11\": \"Star Wars Jedi: Fallen Order\",\n    \"12\": \"Just Cause 4\",\n  });\n  const [cardImages, setCardsImages] = useState({\n    \"1\": \"https://i.imgur.com/SvPjEBF.jpg\",\n    \"2\": \"https://i.imgur.com/SvPjEBF.jpg\",\n    \"3\": \"https://i.imgur.com/SvPjEBF.jpg\",\n    \"4\": \"https://i.imgur.com/SvPjEBF.jpg\",\n    \"5\": \"https://i.imgur.com/SvPjEBF.jpg\",\n  });\n  const [lists, setLists] = useState({\n    \"list-1\": { cards: [\"1\", \"2\", \"3\"], title: \"Completed 2020\" },\n    \"list-2\": { cards: [\"4\", \"5\", \"6\", \"7\"], title: \"To play\" },\n    \"list-3\": {\n      cards: [\"8\", \"9\", \"10\", \"11\", \"12\"],\n      title: \"Completed 2019\",\n    },\n  });\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    // reordering lists\n    if (type === \"list\") {\n      const newListOrder = listorder;\n      newListOrder.splice(source.index, 1);\n      newListOrder.splice(destination.index, 0, draggableId);\n      setListorder(newListOrder);\n      return;\n    }\n\n    // reordering cards\n    const startListId = source.droppableId;\n    const finishListId = destination.droppableId;\n\n    const startList = lists[startListId];\n    const finishList = lists[finishListId];\n\n    if (startList === finishList) {\n      const curentListIndex = source.droppableId;\n      const list = lists[curentListIndex];\n      const newCardsList = Array.from(list.cards);\n\n      newCardsList.splice(source.index, 1);\n      newCardsList.splice(destination.index, 0, draggableId);\n\n      const newList = {\n        ...list,\n        cards: newCardsList,\n      };\n\n      setLists({\n        ...lists,\n        [curentListIndex]: newList,\n      });\n      return;\n    }\n\n    const startListCards = Array.from(startList.cards);\n    startListCards.splice(source.index, 1);\n    const newStart = {\n      ...startList,\n      cards: startListCards,\n    };\n\n    const finishListCards = Array.from(finishList.cards);\n    finishListCards.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finishList,\n      cards: finishListCards,\n    };\n\n    setLists({\n      ...lists,\n      [startListId]: newStart,\n      [finishListId]: newFinish,\n    });\n    return;\n  };\n\n  const [addButtonVisibile, setAddButtonVisibile] = useState(\n    \"visibility-visible\"\n  );\n  const [titleTextBoxVisible, settitleTextBoxVisible] = useState(\n    \"visibility-hidden\"\n  );\n  const [titleEntry, setTitleEntry] = useState(\"\");\n  const titleInputElement = useRef(null);\n\n  const addnewButtonClicked = () => {\n    titleInputElement.current.focus();\n    window.scrollTo(9999999, 0);\n  };\n  const titleInputOnChangeValueHandler = (val) => {\n    setTitleEntry(val.target.value);\n  };\n\n  const searchFocused = () => {\n    setAddButtonVisibile(\"visibility-hidden\");\n    settitleTextBoxVisible(\"visibility-visible\");\n  };\n\n  const searchBlured = () => {\n    setAddButtonVisibile(\"visibility-visible\");\n    settitleTextBoxVisible(\"visibility-hidden\");\n    // After the users clicked out of the search we want to add a new list\n    const lists_ids = Object.keys(lists).sort();\n    const last_id = lists_ids[lists_ids.length - 1];\n    const new_id =\n      \"list-\" + (parseInt(last_id.replace(\"list-\", \"\")) + 1).toString();\n\n    setLists({ ...lists, [new_id]: { cards: [], title: titleEntry } });\n    const new_order = listorder\n    new_order.push(new_id)\n    setListorder(new_order)\n    console.log(lists)\n  };\n  return (\n    <div className=\"layout-wrapper\">\n      <div className=\"layout-lists\">\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"lists\" direction=\"horizontal\" type=\"list\">\n            {(provided) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"lists-wrapper\"\n              >\n                {listorder.map((item, index) => {\n                  const listCards = [];\n                  const curentList = lists[item];\n                  const title = curentList.title;\n                  const cardsOrder = curentList.cards;\n\n                  cardsOrder.forEach((i) => {\n                    listCards.push({\n                      cardTitle: cards[i],\n                      cardId: i,\n                      cardImage: cardImages[i],\n                    });\n                  });\n\n                  return (\n                    <List\n                      listCards={listCards}\n                      title={title}\n                      listId={item}\n                      index={index}\n                    />\n                  );\n                })}\n                {provided.placeholder}\n                <div className={\"addnew-list-card \" + titleTextBoxVisible}>\n                  <TitleCardInput\n                    onChangeValue={titleInputOnChangeValueHandler}\n                    ref={titleInputElement}\n                    focused={searchFocused}\n                    blured={searchBlured}\n                  />\n                </div>\n                <div className={\"addnew-list-card \" + addButtonVisibile}>\n                  <AddNewCard\n                    cardText=\"+ Add new list\"\n                    height={60}\n                    onClick={addnewButtonClicked}\n                  />\n                </div>\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport \"./BlueButton.scss\";\n\n\nconst BlueButton = (props) => {\n    return (\n        <button className=\"bluebutton\" onClick={props.onClick}>\n        <div type=\"button\" className=\"bluebutton-text\">\n          {props.text}\n        </div>\n      </button>\n    )\n}\n\nexport default BlueButton","import React from \"react\";\nimport \"./LogoButtonsNav.scss\";\nimport BlueButton from \"../../Buttons/BlueButton/BlueButton\";\nconst LogoButtonsNav = () => {\n  return (\n    <nav className=\"logobuttonsnav\">\n      <span className=\"logo\">Bowtie</span>\n\n      <div className=\"register-btn\">\n        <BlueButton text={\"Register\"} />\n      </div>\n\n      <div className=\"loginbtn\">\n        <div className=\"loginbtn-text\">Log In</div>\n      </div>\n    </nav>\n  );\n};\n\nexport default LogoButtonsNav;\n","import React from \"react\";\nimport \"./LandingPage.scss\";\nimport LogoButtonsNav from \"../Navs/LogoButtonsNav/LogoButtonsNav\"\nconst LandingPage = () => {\n  return (\n    <div className=\"LandingPage\">\n      <LogoButtonsNav />\n      {/* <div className=\"content-container\">\n        <div className=\"bigtext grid-right\">\n          Bowtie makes <br /> organizing your gaming life <br />a piece of cake.\n        </div>\n        <div className=\"smalltext1 grid-right\">\n          Put your gaming roadmap on paper, share it with your<br/> friends and take\n          part in the comunity you want.\n        </div>\n        <div className=\"smalltext2 grid-right\">\n          {\" \"}\n          Bowtie allows you to keep track of the upcoming games, <br/> get all the\n          news about them and much more.{\" \"}\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import React from \"react\";\nimport \"./LogoNav.scss\";\n\nconst LogoButtonsNav = () => {\n  return (\n    <nav className = \"logonav\">\n      <span className=\"logo\">Bowtie</span>\n    </nav>\n  );\n};\n\nexport default LogoButtonsNav;\n","import React from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles({\n    root: {\n      '&:hover': {\n        backgroundColor: 'transparent',\n      },\n      '&:focus': {\n        outline: 'none',\n      },\n    },\n    icon: {\n      borderRadius: 0,\n      width: 30,\n      height: 30,\n      boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n      backgroundColor: '#f5f8fa',\n      backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n      // '$root.Mui-focusVisible &': {\n      //   outline: '1px auto rgba(19,124,189,.6)',\n      //   outlineOffset: 2,\n      // },\n\n      'input:hover ~ &': {\n        backgroundColor: '#ebf1f5',\n      },\n      'input:disabled ~ &': {\n        boxShadow: 'none',\n        background: 'rgba(206,217,224,.5)',\n      },\n\n    },\n    checkedIcon: {\n      backgroundColor: 'rgba(88, 94, 234, 0.8)',\n      backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n      '&:before': {\n        display: 'block',\n        width: 30,\n        height: 30,\n        backgroundImage:\n          \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n          \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n          \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n        content: '\"\"',\n      },\n      'input:hover ~ &': {\n        backgroundColor: 'rgba(88, 94, 234, 1)',\n      },\n    },\n  });\n\n\nconst Checkboxs1 = (props) => {\n    const classes = useStyles();\n\n    return (\n        \n        <Checkbox\n        className={classes.root}\n        disableRipple\n        color=\"default\"\n        checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n        icon={<span className={classes.icon} />}\n        inputProps={{ 'aria-label': 'decorative checkbox' }}\n        {...props}\n      />\n    )\n}\n\nexport default Checkboxs1","import React from \"react\";\nimport \"./LoginPage.scss\";\nimport LogoNav from \"../Navs/LogoNav/LogoNav\";\nimport BlueButton from \"../Buttons/BlueButton/BlueButton\";\nimport Checkboxs1 from \"../Checkboxes/Checkboxs1/Checkboxs1\";\nimport { useState } from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberCheck, setRememberCheck] = useState(false);\n  const inputFieldChanged = (value, setState) => {\n    setState(value.target.value);\n  };\n  const loginClicked = (value) => {\n    console.log(\"login clicked\")\n  };\n  const checkboxClicked = (value, setState) => {\n    if (rememberCheck === true)\n      setState(false)\n    else\n      setState(true)\n  };\n  const resetpassClicked = () => {\n    console.log(\"reset pass clicked\")\n  }\n  return (\n    <div className=\"loginpage\">\n      <LogoNav />\n      <div className=\"form-container\">\n        <div className=\"form-wrapper\">\n          <div className=\"buttons\">\n            <span className=\"login-btn\">Log In</span>\n            <Link to=\"/register\" style={{ textDecoration: 'none' }}>\n              <span className=\"register-btn\">Register</span>\n            </Link>\n          </div>\n\n          <div>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(value) => inputFieldChanged(value, setEmail)}\n            ></input>\n          </div>\n          <div>\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(value) => inputFieldChanged(value, setPassword)}\n            ></input>\n          </div>\n\n          <div className=\"remember-checkbox\">\n            <Checkboxs1\n              checked={rememberCheck}\n              onClick={(value) => checkboxClicked(value, setRememberCheck)}\n            />\n            <span>Remember me</span>\n          </div>\n          <div className=\"login-submit-btn\">\n            <BlueButton text=\"Log In\" onClick={loginClicked} />\n          </div>\n          <div className=\"forgot-pass-text\">\n            Forgot password? <span className=\"reset-pass-btn\" onClick={resetpassClicked}> Reset </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport \"./RegisterPage.scss\";\nimport LogoNav from \"../Navs/LogoNav/LogoNav\";\nimport BlueButton from \"../Buttons/BlueButton/BlueButton\";\nimport Checkboxs1 from \"../Checkboxes/Checkboxs1/Checkboxs1\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst RegisterPage = () => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberCheck, setRememberCheck] = useState(false);\n  const inputFieldChanged = (value, setState) => {\n    setState(value.target.value);\n  };\n  const registerClicked = (value) => {\n    console.log(\"register clicked\");\n  };\n\n  return (\n    <div className=\"registerpage\">\n      <LogoNav />\n      <div className=\"form-container\">\n        <div className=\"form-wrapper\">\n          <div className=\"buttons\">\n            <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\n              <span className=\"login-btn\">Log In</span>\n            </Link>\n            <span className=\"register-btn\">Register</span>\n          </div>\n\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Username\"\n              value={username}\n              onChange={(value) => inputFieldChanged(value, setUsername)}\n            ></input>\n          </div>\n\n          <div>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(value) => inputFieldChanged(value, setEmail)}\n            ></input>\n          </div>\n\n          <div>\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(value) => inputFieldChanged(value, setPassword)}\n            ></input>\n          </div>\n\n          <div className=\"register-submit-btn\">\n            <BlueButton text=\"Register\" onClick={registerClicked} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import React from 'react';\nimport logo from './logo.svg';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Layout from \"../src/components/gamelist/Layout\"\nimport LandingPage from \"../src/components/LandingPage/LandingPage\"\nimport LoginPage from \"../src/components/LoginPage/LoginPage\"\nimport RegisterPage from \"../src/components/RegisterPage/RegisterPage\"\nfunction App() {\n  return (\n  <Router>\n    <Switch>\n    <Route path=\"/bowtie\" exact component={Layout}/> {/* debug */}\n    <Route path=\"/\" exact component={LandingPage}/>\n    <Route path=\"/board\" component={Layout}/>\n    <Route path=\"/login\" component={LoginPage}/>\n    <Route path=\"/register\" component={RegisterPage}/>\n    </Switch>\n  </Router>\n  \n  );\n}\n\nexport default App;\n\n /*<div className=\"App\">\n<header className=\"App-header\">\n  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  <p>\n    Edit <code>src/App.js</code> and save to reload.\n  </p>\n  <a\n    className=\"App-link\"\n    href=\"https://reactjs.org\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    Learn React\n  </a>\n</header>\n</div> */ ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}